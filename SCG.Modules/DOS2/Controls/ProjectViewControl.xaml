<UserControl
	x:Class="SCG.Modules.DOS2.Controls.ProjectViewControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:c="clr-namespace:SCG.Controls;assembly=SourceControlGenerator"
	xmlns:cb="clr-namespace:SCG.Controls.Behavior;assembly=SourceControlGenerator"
	xmlns:core="clr-namespace:SCG.Modules.DOS2.Core"
	xmlns:cv="clr-namespace:SCG.Converters;assembly=SourceControlGenerator"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:data="clr-namespace:SCG.Data.View;assembly=SourceControlGenerator"
	xmlns:local="clr-namespace:SCG.Modules.DOS2.Controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:proxy="clr-namespace:SCG.Data.Proxy;assembly=SourceControlGenerator"
	xmlns:scg="clr-namespace:SCG;assembly=SourceControlGenerator"
	xmlns:scgcore="clr-namespace:SCG.Core;assembly=SourceControlGenerator"
	x:Name="ProjectViewControlMain"
	d:DesignHeight="500"
	d:DesignWidth="900"
	Foreground="{x:Null}"
	KeyDown="ProjectViewControlMain_KeyDown"
	KeyUp="ProjectViewControlMain_KeyUp"
	Loaded="ProjectViewControlMain_Loaded"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/SourceControlGenerator;component/ThemeSystem/ResourceDictionary/MainAppDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style
				x:Key="DataGrid_NoHighlight"
				BasedOn="{StaticResource {x:Type DataGridCell}}"
				TargetType="DataGridCell">
				<Style.Triggers>
					<Trigger Property="IsSelected" Value="true">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
						<Setter Property="Background" Value="{x:Null}" />
						<Setter Property="BorderBrush" Value="{x:Null}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="RefreshButtonStyle" TargetType="Button">
				<Setter Property="Margin" Value="10,4,0,4" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Grid>
								<Image
									Name="Image"
									Width="16"
									Height="16"
									MaxWidth="16"
									MaxHeight="16"
									Source="{Binding Source={x:Static data:IconPathData.Refresh}, Converter={StaticResource StringToCachedImageConverter}}"
									Stretch="UniformToFill" />
								<Rectangle
									Name="ImageHighlight"
									Width="16"
									Height="16"
									Visibility="Collapsed">
									<Rectangle.Fill>
										<SolidColorBrush Opacity="0.25" Color="White" />
									</Rectangle.Fill>
									<Rectangle.OpacityMask>
										<ImageBrush ImageSource="{Binding Path=Source, ElementName=Image, FallbackValue={x:Null}}" />
									</Rectangle.OpacityMask>
								</Rectangle>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="ImageHighlight" Property="Visibility" Value="Visible" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid
		x:Name="Projects_ParentGrid"
		Width="Auto"
		Height="Auto">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Name="ManagedProjectsRow" Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Grid
			x:Name="AvailableProjectsView"
			Grid.Row="0"
			Grid.Column="1"
			Margin="0"
			Background="{x:Null}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Name="AvailableProjectsRow" Width="*" />
			</Grid.ColumnDefinitions>
			<StackPanel
				x:Name="SideWindowButtons"
				Grid.Column="0"
				Orientation="Vertical">
				<StackPanel.Resources>
					<Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="-90" />
							</Setter.Value>
						</Setter>
					</Style>
				</StackPanel.Resources>
			</StackPanel>
			<Grid
				Grid.Column="1"
				Margin="10,0"
				Visibility="{Binding AvailableProjectsVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
				<Grid x:Name="NewProjects">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Name="AvailableProjectRow" Height="{Binding NewProjects.Count, Converter={StaticResource IntToGridLengthConverter}, FallbackValue=*}" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<StackPanel Orientation="Horizontal">
						<Label
							Grid.Row="0"
							Margin="0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Content="Available Projects"
							ToolTip="{Binding Source={x:Static core:DOS2Tooltips.AvailableProjects}, Converter={StaticResource NewlineStringConverter}}" />
						<Button
							x:Name="Btn_AvailableProjects_Refresh"
							Click="Btn_AvailableProjects_Refresh_Click"
							IsEnabled="{Binding CanClickRefresh}"
							Style="{StaticResource RefreshButtonStyle}"
							ToolTip="Refresh Available Projects" />
					</StackPanel>
					<Grid
						Grid.Row="1"
						Width="200"
						MaxWidth="200">
						<Grid>

							<ListBox
								x:Name="AvailableProjectsList"
								MaxHeight="192"
								HorizontalContentAlignment="Left"
								cb:ListBoxSelectionBehavior.ClickSelection="True"
								ItemsSource="{Binding NewProjects, NotifyOnTargetUpdated=True}"
								ScrollViewer.HorizontalScrollBarVisibility="Auto"
								ScrollViewer.VerticalScrollBarVisibility="Auto"
								SelectionChanged="AvailableProjectsList_SelectionChanged"
								SelectionMode="Extended"
								TargetUpdated="AvailableProjectsList_TargetUpdated">
								<ListBox.ItemContainerStyle>
									<Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem">
										<Setter Property="Padding" Value="5" />
										<Setter Property="HorizontalAlignment" Value="Stretch" />
										<!--
										<Setter Property="Background" >
											<Setter.Value>
												<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;1'}" />

											</Setter.Value>
										</Setter>
										!-->
									</Style>
								</ListBox.ItemContainerStyle>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock
											HorizontalAlignment="Center"
											Text="{Binding Name}"
											TextAlignment="Center"
											ToolTip="{Binding Tooltip}"
											ToolTipService.BetweenShowDelay="0"
											ToolTipService.InitialShowDelay="0" />
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
							<TextBlock
								Margin="5,5,0,5"
								Padding="0,0,10,0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								FontStyle="Italic"
								Foreground="#FF4D4D4D"
								Text="No Unmanaged Projects Found"
								Visibility="{Binding NewProjects.Count, Converter={StaticResource IntToVisibilityConverter}, ConverterParameter='0', FallbackValue=Visible}" />
						</Grid>
					</Grid>
					<Grid Grid.Row="2">
						<Button
							x:Name="AddSelectedProjectsButton"
							MinWidth="150"
							MinHeight="20"
							Margin="0,5"
							HorizontalAlignment="Center"
							Click="AddSelectedProjectsButton_Click"
							Content="{Binding ManageButtonsText}"
							FontFamily="Roboto"
							IsEnabled="{Binding CanAddProject}" />
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<Grid
			x:Name="ManagedProjectsBorder"
			Grid.RowSpan="2"
			Grid.Column="0">
			<Grid x:Name="ManagedProjectsGrid" Margin="0">
				<Grid.Resources />
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" MinHeight="100" />
					<RowDefinition Name="ProjectsGridSplit" Height="5" />
					<RowDefinition Height="Auto" MinHeight="45" />
				</Grid.RowDefinitions>
				<Grid Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<StackPanel Orientation="Horizontal">
						<Label
							Grid.Row="0"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Content="Managed Projects" />
						<Button
							x:Name="Btn_ModProjects_Refresh"
							Click="Btn_ModProjects_Refresh_Click"
							IsEnabled="{Binding CanClickRefresh}"
							Style="{StaticResource RefreshButtonStyle}"
							ToolTip="Refresh Project Data" />
					</StackPanel>
					<Grid Grid.Column="2">
						<Button
							x:Name="Btn_AvailableProjects"
							Margin="4,0"
							Padding="10,2"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Click="Btn_AvailableProjects_Click"
							ToolTip="{Binding AvailableProjectsTooltip}">
							<Button.Resources>
								<Style TargetType="{x:Type Image}">
									<Setter Property="MinWidth" Value="16" />
									<Setter Property="MaxWidth" Value="16" />
									<Setter Property="MinHeight" Value="16" />
									<Setter Property="MaxHeight" Value="16" />
									<Setter Property="Stretch" Value="UniformToFill" />
									<Setter Property="Margin" Value="0" />
								</Style>
							</Button.Resources>
							<Button.Style>
								<Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
									<!--  Default Content value  -->
									<Setter Property="Content">
										<Setter.Value>
											<StackPanel cb:MarginSetter.Margin="2" Orientation="Horizontal">
												<TextBlock Text="{Binding AvailableProjectsToggleText, FallbackValue='Available Projects'}" />
												<Image RenderTransformOrigin=".5,.5" Source="{Binding Source={x:Static data:IconPathData.ExpandChevronRight}, Converter={StaticResource StringToCachedImageConverter}}">
													<Image.RenderTransform>
														<RotateTransform Angle="180" />
													</Image.RenderTransform>
												</Image>
												<Image Source="{Binding Source={x:Static data:IconPathData.Star}, Converter={StaticResource StringToCachedImageConverter}}" Visibility="{Binding NewProjectsAvailable, Converter={StaticResource BoolToVisibilityConverter}}" />
											</StackPanel>
										</Setter.Value>
									</Setter>

									<!--  Triggered values  -->
									<Style.Triggers>
										<DataTrigger Binding="{Binding AvailableProjectsVisible}" Value="True">
											<Setter Property="Content">
												<Setter.Value>
													<StackPanel cb:MarginSetter.Margin="2" Orientation="Horizontal">
														<TextBlock Text="{Binding AvailableProjectsToggleText, FallbackValue='Available Projects'}" />
														<Image Source="{Binding Source={x:Static data:IconPathData.ExpandChevronRight}, Converter={StaticResource StringToCachedImageConverter}}" />
													</StackPanel>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
					</Grid>
				</Grid>
				<Border
					Grid.Row="1"
					BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
					BorderThickness="1,1,1,0">
					<Grid x:Name="ProjectsDataGridScrollViewer">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="2" />
						</Grid.RowDefinitions>
						<DataGrid
							x:Name="ManagedProjectsDataGrid"
							AutoGenerateColumns="False"
							BorderBrush="{x:Null}"
							BorderThickness="0"
							CanUserAddRows="False"
							CellStyle="{StaticResource DataGrid_NoHighlight}"
							ColumnWidth="Auto"
							EnableRowVirtualization="False"
							FrameworkElement.Loaded="ManagedProjectsDataGrid_Loaded"
							IsReadOnly="True"
							ItemsSource="{Binding ManagedProjects}"
							SelectionChanged="ManagedProjectsDataGrid_SelectionChanged">
							<DataGrid.Resources>
								<Style
									x:Key="ColumnElementStyle"
									BasedOn="{StaticResource {x:Type TextBlock}}"
									TargetType="TextBlock">
									<Setter Property="Margin" Value="5,0,10,0" />
								</Style>
								<Style
									x:Key="ProjectsHeaderStyle"
									BasedOn="{StaticResource {x:Type DataGridColumnHeader}}"
									TargetType="DataGridColumnHeader">
									<Setter Property="HorizontalContentAlignment" Value="Center" />
								</Style>
								<Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
									<EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick" />
								</Style>
							</DataGrid.Resources>
							<DataGrid.RowStyle>
								<Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
									<Setter Property="IsSelected" Value="{Binding Selected}" />
								</Style>
							</DataGrid.RowStyle>
							<DataGrid.Columns>
								<DataGridTemplateColumn
									MinWidth="25"
									CanUserResize="False"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTemplateColumn.Header>
										<CheckBox
											Checked="ManagedProjects_SelectAll"
											ToolTip="Select/Deselect All"
											Unchecked="ManagedProjects_SelectNone" />
									</DataGridTemplateColumn.Header>
									<DataGridTemplateColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="{x:Type DataGridCell}">
											<Setter Property="Margin" Value="0" />
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<CheckBox
												x:Name="ProjectSelectedCheckbox"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												IsChecked="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=IsSelected, Mode=OneWay}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn
									MinWidth="60"
									CanUserResize="False"
									CanUserSort="False"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="Shortcuts" ToolTipService.ToolTip="{x:Static core:DOS2Tooltips.DataGridHeaderShortcuts}" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<StackPanel
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Orientation="Horizontal">
												<StackPanel.Resources>
													<Style TargetType="Button">
														<Setter Property="MinHeight" Value="16" />
														<Setter Property="MinWidth" Value="16" />
														<Setter Property="MaxHeight" Value="16" />
														<Setter Property="MaxWidth" Value="16" />
													</Style>
												</StackPanel.Resources>
												<Button
													x:Name="Btn_Backup"
													Command="{Binding OpenBackupFolder}"
													ToolTip="{x:Static core:DOS2Tooltips.Button_BackupFolder}">
													<Image Source="{Binding Source={x:Static data:IconPathData.Archive}, Converter={StaticResource StringToCachedImageConverter}}" Stretch="UniformToFill" />
												</Button>
												<Button
													x:Name="Btn_GenGit"
													Command="{Binding OpenGitFolder}"
													IsEnabled="{Binding GitGenerated}">
													<Image Stretch="UniformToFill" ToolTipService.ShowOnDisabled="True">
														<Image.Style>
															<Style TargetType="Image">
																<Style.Triggers>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Source" Value="{Binding Source={x:Static data:IconPathData.GitLogo_Disabled}, Converter={StaticResource StringToCachedImageConverter}}" />
																		<Setter Property="ToolTip" Value="{x:Static core:DOS2Tooltips.Button_GitFolderDisabled}" />
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="True">
																		<Setter Property="Source" Value="{Binding Source={x:Static data:IconPathData.GitLogo}, Converter={StaticResource StringToCachedImageConverter}}" />
																		<Setter Property="ToolTip" Value="{x:Static core:DOS2Tooltips.Button_GitFolder}" />
																	</Trigger>
																</Style.Triggers>
															</Style>
														</Image.Style>
													</Image>
												</Button>
												<Button
													x:Name="Btn_DataFolders"
													Click="SetDataFolderContextMenuTarget"
													ToolTip="{x:Static core:DOS2Tooltips.Button_DataFolderParent}">
													<Image Source="{Binding Source={x:Static data:IconPathData.Folder}, Converter={StaticResource StringToCachedImageConverter}}" Stretch="UniformToFill" />
													<Button.ContextMenu>
														<ContextMenu>
															<MenuItem
																x:Name="Btn_EditorFolder"
																Command="{Binding OpenEditorFolder}"
																Header="{x:Static core:DOS2Tooltips.Button_DataFolderEditor}" />
															<MenuItem
																x:Name="Btn_ModsFolder"
																Command="{Binding OpenModsFolder}"
																Header="{x:Static core:DOS2Tooltips.Button_DataFolderMods}" />
															<MenuItem
																x:Name="Btn_ProjectFolder"
																Command="{Binding OpenProjectFolder}"
																Header="{x:Static core:DOS2Tooltips.Button_DataFolderProject}" />
															<MenuItem
																x:Name="Btn_PublicFolder"
																Command="{Binding OpenPublicFolder}"
																Header="{x:Static core:DOS2Tooltips.Button_DataFolderPublic}" />
														</ContextMenu>
													</Button.ContextMenu>
													<Button.Style>
														<Style TargetType="{x:Type Button}">
															<Style.Triggers>
																<EventTrigger RoutedEvent="Click">
																	<EventTrigger.Actions>
																		<BeginStoryboard>
																			<Storyboard>
																				<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
																					<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
																				</BooleanAnimationUsingKeyFrames>
																			</Storyboard>
																		</BeginStoryboard>
																	</EventTrigger.Actions>
																</EventTrigger>
															</Style.Triggers>
															<Setter Property="ContextMenu">
																<Setter.Value>
																	<ContextMenu>
																		<MenuItem />
																		<MenuItem />
																	</ContextMenu>
																</Setter.Value>
															</Setter>
														</Style>
													</Button.Style>
												</Button>
												<Button
													x:Name="Btn_OpenMarkdown"
													Command="{Binding Path=Data.OpenProjectReadmeInMarkdownConverterCommand, Source={StaticResource AppControllerProxy}}"
													CommandParameter="{Binding}"
													IsEnabled="{Binding GitGenerated}"
													ToolTip="{x:Static core:DOS2Tooltips.Button_MarkdownConverter}">
													<Image Source="{Binding Source={x:Static data:IconPathData.Convert}, Converter={StaticResource StringToCachedImageConverter}}" Stretch="UniformToFill" />
												</Button>
											</StackPanel>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn
									Width="Auto"
									MinWidth="50"
									Binding="{Binding ModuleInfo.Name}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Name"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="DataGridCell">
											<Setter Property="ToolTip" Value="{Binding ModuleInfo.Folder}" />
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									MinWidth="50"
									Binding="{Binding ModuleInfo.Author}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Author"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn
									MinWidth="50"
									Binding="{Binding Version}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Version"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn
									MinWidth="40"
									Binding="{Binding ModuleInfo.Type}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Type"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn
									x:Name="DescriptionColumn"
									Width="70"
									Binding="{Binding ModuleInfo.Description}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Description"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="DataGridCell">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ModuleInfo.Description, Converter={StaticResource EmptyStringVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock
																MaxWidth="200"
																Text="{Binding ModuleInfo.Description}"
																TextWrapping="Wrap" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ModuleInfo.Description, Converter={StaticResource EmptyStringVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTemplateColumn Header="Icon" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTemplateColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="DataGridCell">
											<Setter Property="ToolTip">
												<Setter.Value>
													<Image
														MaxWidth="256"
														MaxHeight="256"
														Source="{Binding ThumbnailPath, Converter={StaticResource StringToCachedImageConverter}}"
														Stretch="Uniform"
														Visibility="{Binding ThumbnailExists, FallbackValue=Collapsed}" />
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Image
												MaxWidth="16"
												MaxHeight="16"
												Source="{Binding ThumbnailPath, Converter={StaticResource StringToCachedImageConverter}}"
												Stretch="Uniform"
												Visibility="{Binding ThumbnailExists, FallbackValue=Collapsed}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn
									MinWidth="80"
									Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Created"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="DataGridCell">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ProjectInfo.CreationDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									MinWidth="80"
									Binding="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Modified"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="DataGridCell">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									MinWidth="80"
									Binding="{Binding LastBackup, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"
									ElementStyle="{StaticResource ColumnElementStyle}"
									Header="Last Backup"
									HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style BasedOn="{StaticResource DataGrid_NoHighlight}" TargetType="DataGridCell">
											<Style.Triggers>
												<DataTrigger Binding="{Binding LastBackup, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding LastBackup, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding LastBackup, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
							</DataGrid.Columns>
						</DataGrid>
					</Grid>
				</Border>
				<GridSplitter
					x:Name="ProjectsDataGridSplitter"
					Grid.Row="2"
					Height="4"
					Margin="0,-4,0,0"
					HorizontalAlignment="Stretch"
					Foreground="{x:Null}" />
				<Grid
					x:Name="ProjectActions"
					Grid.Row="3"
					MaxHeight="30"
					Margin="0,5,0,0"
					VerticalAlignment="Top">
					<Grid Margin="20,0">
						<Grid.Resources>
							<Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
								<Setter Property="Margin" Value="4,2" />
								<Setter Property="Padding" Value="12,2" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<StackPanel Orientation="Horizontal">
							<TextBlock
								Margin="0,0,4,0"
								VerticalAlignment="Center"
								Foreground="Black"
								Text="Backup Mode:" />
							<ComboBox
								x:Name="BackupModeCombobox"
								Width="Auto"
								MaxHeight="{Binding ElementName=BackupButton, Path=ActualHeight}"
								ItemsSource="{Binding Source={scg:EnumBindingSource {x:Type scg:BackupMode}}}"
								SelectedValue="{Binding Settings.BackupMode, Mode=TwoWay}">
								<ComboBox.ToolTip>
									<TextBlock
										MaxWidth="200"
										Text="{Binding Settings.BackupMode, Converter={StaticResource EnumDescriptionConverter}, FallbackValue={x:Null}}"
										TextWrapping="Wrap"
										Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource EmptyStringVisibilityConverter}}" />
								</ComboBox.ToolTip>
							</ComboBox>
							<Button
								x:Name="BackupButton"
								Click="BackupButton_Click"
								Content="Backup"
								IsEnabled="{Binding ProjectSelected}"
								ToolTip="{x:Static core:DOS2Tooltips.Button_BackupSelected}" />
							<Button
								x:Name="BackupSeletedButton"
								Click="BackupSelectedButton_Click"
								Content="Backup To..."
								IsEnabled="{Binding ProjectSelected}"
								ToolTip="{x:Static core:DOS2Tooltips.Button_BackupSelectedTo}" />
						</StackPanel>
						<StackPanel
							Grid.Column="1"
							HorizontalAlignment="Right"
							Orientation="Horizontal">
							<Button
								x:Name="GitGenerationButton"
								Click="GitGenerationButton_Click"
								Content="Start Git Generator..."
								IsEnabled="{Binding CanGenerateGit}"
								ToolTip="{x:Static core:DOS2Tooltips.Button_StartGitGenerator}" />
						</StackPanel>

					</Grid>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
