<local:DOS2DEProjectsViewBase
			x:Class="SCG.Modules.DOS2DE.Views.DOS2DEProjectsView"
			xmlns:reactiveui="http://reactiveui.net"
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
			xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			xmlns:local="clr-namespace:SCG.Modules.DOS2DE.Views"
			xmlns:core="clr-namespace:SCG.Modules.DOS2DE.Core"
			xmlns:scg="clr-namespace:SCG;assembly=SourceControlGenerator"
			xmlns:scgcore="clr-namespace:SCG.Core;assembly=SourceControlGenerator"
			xmlns:c="clr-namespace:SCG.Controls;assembly=SourceControlGenerator"
			xmlns:cb="clr-namespace:SCG.Controls.Behavior;assembly=SourceControlGenerator"
			xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
			xmlns:cv="clr-namespace:SCG.Converters;assembly=SourceControlGenerator"
			xmlns:data="clr-namespace:SCG.Modules.DOS2DE.Data.View"
			xmlns:vdata="clr-namespace:SCG.Data.View;assembly=SourceControlGenerator"
			xmlns:proxy="clr-namespace:SCG.Data.Proxy;assembly=SourceControlGenerator"
			mc:Ignorable="d" 
			d:DesignHeight="500" d:DesignWidth="900"
			d:DataContext="{d:DesignInstance local:DOS2DEProjectsViewTestData, IsDesignTimeCreatable=True}"
			KeyDown="ProjectView_KeyDown" KeyUp="ProjectView_KeyUp" Foreground="{x:Null}"
>
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/SourceControlGenerator;component/ThemeSystem/ResourceDictionary/MainAppDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="DataGrid_NoHighlight" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
				<Style.Triggers>
					<Trigger Property="IsSelected" Value="True">
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="Lime" Opacity="0.35" />
							</Setter.Value>
						</Setter>
						<Setter Property="Foreground" Value="Black" />
						<Setter Property="BorderBrush" Value="{x:Null}" />
					</Trigger>
					<Trigger Property="IsSelected" Value="False">
						<Setter Property="Background" Value="{x:Null}" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style TargetType="Image" x:Key="ButtonImageStyle">
				<Setter Property="MinWidth" Value="16" />
				<Setter Property="MinHeight" Value="16" />
				<Setter Property="MaxWidth" Value="16" />
				<Setter Property="MaxHeight" Value="16" />
				<Setter Property="Stretch" Value="UniformToFill" />
			</Style>
			<Style x:Key="RefreshButtonStyle" TargetType="{x:Type c:ImageButton}">
				<Setter Property="Margin" Value="10,4,0,4" />
				<!--<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate>
							<Grid>
								<Image Name="Image" Source="{Binding Source={RelativeSource TemplatedParent}, Path=Source}" Style="{StaticResource ButtonImageStyle}"/>
								<Rectangle Name="ImageHighlight" Width="16" Height="16" Visibility="Collapsed">
									<Rectangle.Fill>
										<SolidColorBrush Color="White" Opacity="0.25"/>
									</Rectangle.Fill>
									<Rectangle.OpacityMask>
										<ImageBrush ImageSource="{Binding Path=Source, ElementName=Image, FallbackValue={x:Null}}" />
									</Rectangle.OpacityMask>
								</Rectangle>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="ImageHighlight" Property="Visibility" Value="Visible" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>-->
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid x:Name="Projects_ParentGrid" Width="Auto" Height="Auto">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" Name="ManagedProjectsRow" SharedSizeGroup="ManagedProjectsRow" />
			<ColumnDefinition Width="Auto" Name="AvailableProjectsColumn" SharedSizeGroup="AvailableProjectsColumn" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Grid x:Name="AvailableProjectsView" Grid.Column="1" Grid.Row="0" Background="{x:Null}" Margin="0" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" Name="AvailableProjectsRow" />
			</Grid.ColumnDefinitions>
			<StackPanel x:Name="SideWindowButtons" Grid.Column="0" Orientation="Vertical">
				<StackPanel.Resources>
					<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="-90" />
							</Setter.Value>
						</Setter>
					</Style>
				</StackPanel.Resources>
			</StackPanel>
			<Grid Grid.Column="1" Margin="10,0" Visibility="{Binding AvailableProjectsVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Visible}">
				<Grid x:Name="NewProjectsGrid" >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Name="AvailableProjectRow" Height="{Binding UnmanagedProjects.Count, Converter={StaticResource IntToGridLengthConverter}, FallbackValue=*}"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<StackPanel Orientation="Horizontal">
						<Label Content="Available Projects" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Margin="0" ToolTip="{Binding Source={x:Static core:DOS2DETooltips.AvailableProjects}, Converter={StaticResource NewlineStringConverter}}" />
						<c:ImageButton x:Name="Btn_AvailableProjects_Refresh" ToolTip="{Binding Source={x:Static core:DOS2DETooltips.Button_RefreshAvailableProjects}, FallbackValue='Refresh Available Projects'}" 
								Command="{Binding RefreshAllCommand}"
								IsEnabled="{Binding CanClickRefresh}" 
								Source="{x:Static vdata:IconPathData.Refresh}" Style="{StaticResource RefreshButtonStyle}" />
					</StackPanel>
					<Grid Grid.Row="1" Width="200" MaxWidth="200">
						<Grid>
							<ListBox x:Name="AvailableProjectsList" ItemsSource="{Binding UnmanagedProjects}" HorizontalContentAlignment="Left" SelectionMode="Extended" SelectionChanged="AvailableProjectsList_SelectionChanged"
									 ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" cb:ListBoxSelectionBehavior.ClickSelection="True" TargetUpdated="AvailableProjectsList_TargetUpdated" MaxHeight="192"
									 >
								<ListBox.ItemContainerStyle>
									<Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
										<Setter Property="Padding" Value="5" />
										<Setter Property="HorizontalAlignment" Value="Stretch"/>
										<!--
										<Setter Property="Background" >
											<Setter.Value>
												<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;1'}" />

											</Setter.Value>
										</Setter>
										!-->
									</Style>
								</ListBox.ItemContainerStyle>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding DisplayName}" ToolTip="{Binding Tooltip}" ToolTipService.InitialShowDelay="0" ToolTipService.BetweenShowDelay="0"/>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
							<TextBlock Text="{Binding Source={x:Static core:DOS2DETooltips.AvailableProjects_Availability_None}}" Visibility="{Binding NoProjectsFoundVisibility, FallbackValue=Collapsed}" FontStyle="Italic" Foreground="#FF4D4D4D" Margin="5,5,0,5" Padding="0,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center"  />
						</Grid>
					</Grid>
					<Grid Grid.Row="2">
						<Button x:Name="AddSelectedProjectsButton" Click="AddSelectedProjectsButton_Click" Content="{Binding ManageButtonsText}" IsEnabled="{Binding CanAddProject}" HorizontalAlignment="Center" Margin="0,5" FontFamily="Roboto" MinWidth="150" MinHeight="20" />
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<Grid x:Name="ManagedProjectsBorder" Grid.Column="0" Grid.RowSpan="2" >
			<Grid x:Name="ManagedProjectsGrid" Margin="0">
				<Grid.Resources>
				</Grid.Resources>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*" MinHeight="100"/>
					<RowDefinition Height="5" Name="ProjectsGridSplit"/>
					<RowDefinition Height="Auto" MinHeight="45"/>
				</Grid.RowDefinitions>
				<Grid Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<StackPanel Orientation="Horizontal">
						<Label Content="Managed Projects" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" />
						<c:ImageButton x:Name="Btn_ModProjects_Refresh" ToolTip="Refresh Project Data" Command="{Binding RefreshAllCommand}" 
							IsEnabled="{Binding CanClickRefresh}" Source="{x:Static vdata:IconPathData.Refresh}" 
							Style="{StaticResource RefreshButtonStyle}" />
					</StackPanel>
					<Grid Grid.Column="2">
						<Button x:Name="Btn_AvailableProjects" ToolTip="{Binding AvailableProjectsTooltip}" Click="Btn_AvailableProjects_Click" HorizontalAlignment="Right" VerticalAlignment="Center" Padding="10,2" Margin="4,0">
							<Button.Resources>
								<Style TargetType="{x:Type Image}" BasedOn="{StaticResource ButtonImageStyle}">
									<Setter Property="Margin" Value="0" />
								</Style>
							</Button.Resources>
							<Button.Style>
								<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
									<!-- Default Content value -->
									<Setter Property="Content">
										<Setter.Value>
											<StackPanel Orientation="Horizontal" cb:MarginSetter.Margin="2">
												<TextBlock Text="{Binding AvailableProjectsToggleText, FallbackValue='Available Projects'}" />
												<Image Source="{Binding Source={x:Static vdata:IconPathData.ExpandChevronRight}, Converter={StaticResource StringToCachedImageConverter}}"
													RenderTransformOrigin=".5,.5">
													<Image.RenderTransform>
														<RotateTransform Angle="180" />
													</Image.RenderTransform>
												</Image>
												<Image Visibility="{Binding NewProjectsAvailable, Converter={StaticResource BoolToVisibilityConverter}}" Source="{Binding Source={x:Static vdata:IconPathData.Star}, Converter={StaticResource StringToCachedImageConverter}}" />
											</StackPanel>
										</Setter.Value>
									</Setter>

									<!-- Triggered values -->
									<Style.Triggers>
										<DataTrigger Binding="{Binding AvailableProjectsVisible}" Value="True">
											<Setter Property="Content">
												<Setter.Value>
													<StackPanel Orientation="Horizontal" cb:MarginSetter.Margin="2">
														<TextBlock Text="{Binding AvailableProjectsToggleText, FallbackValue='Available Projects'}" />
														<Image Source="{Binding Source={x:Static vdata:IconPathData.ExpandChevronRight}, Converter={StaticResource StringToCachedImageConverter}}" />
													</StackPanel>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
					</Grid>
				</Grid>
				<Border Grid.Row="1" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
					<Grid x:Name="ProjectsDataGridScrollViewer" >
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="2" />
						</Grid.RowDefinitions>
						<Grid x:Name="LoadingProjectsPanel" Grid.ColumnSpan="2" Grid.RowSpan="2" Background="#CC5B5B5B" Panel.ZIndex="9"  
							Visibility="{Binding LoadPanelVisibility, FallbackValue=Collapsed}"
						>
							<StackPanel VerticalAlignment="Center" Grid.Column="0">
								<TextBlock Text="Loading Projects..." FontSize="24" FontFamily="Arial"
							   Foreground="WhiteSmoke" TextAlignment="Center" Margin="0,0,0,30" 
								>
									<TextBlock.Effect>
										<DropShadowEffect />
									</TextBlock.Effect></TextBlock>
								<c:LoadingSpinner Width="50" Height="50" BallSize="8" BallBrush="#FF5DB3FF">
									<c:LoadingSpinner.Effect>
										<DropShadowEffect ShadowDepth="4" />
									</c:LoadingSpinner.Effect>
								</c:LoadingSpinner>
							</StackPanel>
						</Grid>
						<DataGrid x:Name="ManagedProjectsDataGrid" ItemsSource="{Binding ManagedProjects}" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="ManagedProjectsDataGrid_SelectionChanged" BorderBrush="{x:Null}" BorderThickness="0"  
								  CanUserAddRows="False" EnableRowVirtualization="False" FrameworkElement.Loaded="ManagedProjectsDataGrid_Loaded" ColumnWidth="Auto" CellStyle="{StaticResource DataGrid_NoHighlight}"
								  
								  >
							<DataGrid.Resources>
								<Style x:Key="ColumnElementStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
									<Setter Property="Margin" Value="5,0,10,0" />
								</Style>
								<Style x:Key="ProjectsHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
									<Setter Property="HorizontalContentAlignment" Value="Center" />
								</Style>
								<Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
									<EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
								</Style>
							</DataGrid.Resources>
							<DataGrid.RowStyle>
								<Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
									<Setter Property="IsSelected" Value="{Binding Selected}" />
								</Style>
							</DataGrid.RowStyle>
							<DataGrid.Columns>
								<DataGridTemplateColumn MinWidth="25" CanUserResize="False" HeaderStyle="{StaticResource ProjectsHeaderStyle}"  >
									<DataGridTemplateColumn.Header>
										<CheckBox Checked="ManagedProjects_SelectAll" Unchecked="ManagedProjects_SelectNone" ToolTip="Select/Deselect All" />
									</DataGridTemplateColumn.Header>
									<DataGridTemplateColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="Margin" Value="0" />
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<CheckBox x:Name="ProjectSelectedCheckbox" IsChecked="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"
													  IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=IsSelected,Mode=OneWay}"
													  />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn MinWidth="60"  HeaderStyle="{StaticResource ProjectsHeaderStyle}" CanUserResize="False" CanUserSort="False" >
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="Shortcuts" ToolTipService.ToolTip="{x:Static core:DOS2DETooltips.DataGridHeaderShortcuts}" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
												<c:ImageButton x:Name="Btn_DataFolders"
													ToolTip="{x:Static core:DOS2DETooltips.Button_DataFolderParent}" 
													Click="SetDataFolderContextMenuTarget"
													Source="{x:Static vdata:IconPathData.Folder}"
													Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type local:DOS2DEProjectsView}}}"
												>
													<c:ImageButton.ContextMenu>
														<ContextMenu>
															<MenuItem x:Name="Btn_EditorFolder" Header="{x:Static core:DOS2DETooltips.Button_DataFolderEditor}" 
																Command="{Binding Path=PlacementTarget.Tag.OpenEditorFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}" />
															<MenuItem x:Name="Btn_ModsFolder" Header="{x:Static core:DOS2DETooltips.Button_DataFolderMods}" 
																Command="{Binding Path=PlacementTarget.Tag.OpenModsFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}" />
															<MenuItem x:Name="Btn_ProjectFolder" Header="{x:Static core:DOS2DETooltips.Button_DataFolderProject}" 
																Command="{Binding Path=PlacementTarget.Tag.OpenProjectFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}" />
															<MenuItem x:Name="Btn_PublicFolder" Header="{x:Static core:DOS2DETooltips.Button_DataFolderPublic}" 
																Command="{Binding Path=PlacementTarget.Tag.OpenPublicFolderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="{Binding}" />
														</ContextMenu>
													</c:ImageButton.ContextMenu>
													<c:ImageButton.Style>
														<Style TargetType="{x:Type c:ImageButton}" BasedOn="{StaticResource DefaultImageButtonStyle}">
															<Style.Triggers>
																<EventTrigger RoutedEvent="Click">
																	<EventTrigger.Actions>
																		<BeginStoryboard>
																			<Storyboard>
																				<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
																					<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
																				</BooleanAnimationUsingKeyFrames>
																			</Storyboard>
																		</BeginStoryboard>
																	</EventTrigger.Actions>
																</EventTrigger>
															</Style.Triggers>
														</Style>
													</c:ImageButton.Style>
												</c:ImageButton>
												<c:ImageButton x:Name="Btn_Backup" 
													ToolTip="{x:Static core:DOS2DETooltips.Button_BackupFolder}" 
													Command="{Binding Path=DataContext.OpenBackupFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DOS2DEProjectsView}}}" CommandParameter="{Binding}"
													Source="{x:Static vdata:IconPathData.Archive}"
												/>
												<c:ImageButton x:Name="Btn_GenGit" IsEnabled="{Binding GitGenerated}" 
													Command="{Binding Path=DataContext.OpenGitFolderCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DOS2DEProjectsView}}}" CommandParameter="{Binding}"
													Source="{x:Static vdata:IconPathData.GitLogo}"
													Source_Disabled="{x:Static vdata:IconPathData.GitLogo_Disabled}"
													ToolTip_Enabled="{x:Static core:DOS2DETooltips.Button_GitFolder}"
													ToolTip_Disabled="{x:Static core:DOS2DETooltips.Button_GitFolderDisabled}"
													Template="{StaticResource ImageButtonTemplate}"
													cb:ImageButtonHoverOnDisabled.Enable="True"
												/>
												<c:ImageButton x:Name="Btn_OpenLocaleEditor" 
													ToolTip="{x:Static core:DOS2DETooltips.Button_OpenLocaleEditor}" 
													Command="{Binding Path=DataContext.OpenInLocalizationEditorCommand, RelativeSource={RelativeSource AncestorType={x:Type local:DOS2DEProjectsView}}}"
													CommandParameter="{Binding}" 
													Source="{x:Static vdata:IconPathData.OpenLocalizationEditor}"
												/>
												<c:ImageButton x:Name="Btn_OpenMarkdown" 
													ToolTip="{x:Static core:DOS2DETooltips.Button_MarkdownConverter}" 
													IsEnabled="{Binding GitGenerated}" Visibility="{Binding GitGenerated, Converter={StaticResource BoolToVisibilityConverter}}"
													Command="{Binding Path=Data.OpenProjectReadmeInMarkdownConverterCommand, Source={StaticResource AppControllerProxy}}"
													CommandParameter="{Binding}"
													Source="{x:Static vdata:IconPathData.Convert}"
												/>
												<!--<Button x:Name="Btn_PackageMod" ToolTip="{x:Static core:DOS2DETooltips.Button_PackageMod}" IsEnabled="{Binding DataContext.Settings.DivinePathSet, ElementName=ProjectView}" Command="{Binding DataContext.PackageProjectCommand, ElementName=ProjectView}"
														CommandParameter="{Binding}" >
													<Image Source="{x:Static vdata:IconPathData.Convert}" Stretch="UniformToFill"/>
												</Button>
												-->
											</StackPanel>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn Header="Name" Binding="{Binding ModuleInfo.Name}" ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="50" Width="Auto" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="ToolTip" Value="{Binding ModuleInfo.Folder}" />
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Author" Binding="{Binding ModuleInfo.Author}" ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="50" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Version" Binding="{Binding Version}" ElementStyle="{StaticResource ColumnElementStyle}"  MinWidth="50" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="ContextMenu">
												<Setter.Value>
													<ContextMenu>
														<MenuItem Header="Edit Version" Command="{Binding EditProjectVersion}" />
													</ContextMenu>
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Type" Binding="{Binding ModuleInfo.Type}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="40" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Description" x:Name="DescriptionColumn" Binding="{Binding ModuleInfo.Description}"  ElementStyle="{StaticResource ColumnElementStyle}" Width="70" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ModuleInfo.Description, Converter={StaticResource EmptyStringVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ModuleInfo.Description}" TextWrapping="Wrap" MaxWidth="200" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ModuleInfo.Description, Converter={StaticResource EmptyStringVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTemplateColumn Header="Icon"  HeaderStyle="{StaticResource ProjectsHeaderStyle}" >
									<DataGridTemplateColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="ToolTip" Value="{x:Null}" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding ThumbnailExists}" Value="True">
													<Setter Property="ToolTip">
														<Setter.Value>
															<Image MaxWidth="256" MaxHeight="256" Stretch="Uniform" Source="{Binding ThumbnailPath, Converter={StaticResource StringToCachedImageConverter}}"/>
														</Setter.Value>
													</Setter>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Image MaxWidth="16" MaxHeight="16" Stretch="Uniform" Source="{Binding ThumbnailPath, Converter={StaticResource StringToCachedImageConverter}}" 
												   Visibility="{Binding ThumbnailExists, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" 
												   ToolTipService.InitialShowDelay="0" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn Header="Created" Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="80" HeaderStyle="{StaticResource ProjectsHeaderStyle}" >
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ProjectInfo.CreationDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Modified" Binding="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="80" HeaderStyle="{StaticResource ProjectsHeaderStyle}" >
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ModuleInfo.ModifiedDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Last Backup" Binding="{Binding LastBackup, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="80" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding LastBackup, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding LastBackup, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding LastBackup, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
							</DataGrid.Columns>
						</DataGrid>
					</Grid>
				</Border>
				<GridSplitter x:Name="ProjectsDataGridSplitter" Grid.Row="2" Height="4" HorizontalAlignment="Stretch" Foreground="{x:Null}" Margin="0,-4,0,0"/>
				<Grid x:Name="ProjectActions" Grid.Row="3" MaxHeight="30" VerticalAlignment="Top" Margin="0,5,0,0">
					<Grid Margin="20,0">
						<Grid.Resources>
							<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
								<Setter Property="Margin" Value="4,2" />
								<Setter Property="Padding" Value="12,2" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Backup Mode:" Margin="0,0,4,0" Foreground="Black" VerticalAlignment="Center" />
							<ComboBox x:Name="BackupModeCombobox" ItemsSource="{Binding Source={scg:EnumBindingSource {x:Type scg:BackupMode}}}" SelectedValue="{Binding Settings.BackupMode, Mode=TwoWay}" Width="Auto" MaxHeight="{Binding ElementName=BackupButton, Path=ActualHeight}" >
								<ComboBox.ToolTip>
									<TextBlock Text="{Binding Settings.BackupMode, Converter={StaticResource EnumDescriptionConverter}, FallbackValue={x:Null}}" TextWrapping="Wrap" MaxWidth="200" 
									Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource EmptyStringVisibilityConverter}}" />
								</ComboBox.ToolTip>
							</ComboBox>
							<Button x:Name="BackupButton" Content="Backup" Click="BackupButton_Click" IsEnabled="{Binding ProjectSelected}" ToolTip="{x:Static core:DOS2DETooltips.Button_BackupSelected}" />
							<Button x:Name="BackupSeletedButton" Content="Backup To..." Click="BackupSelectedButton_Click" IsEnabled="{Binding ProjectSelected}" ToolTip="{x:Static core:DOS2DETooltips.Button_BackupSelectedTo}" />
						</StackPanel>
						<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" >
							<Button x:Name="PackageCreateButton" Content="Create Packages..." IsEnabled="{Binding CanCreatePackages, FallbackValue='False'}" ToolTip="{x:Static core:DOS2DETooltips.Button_PackageMod}" Click="PackageCreateButton_Click" />
							<Button x:Name="GitGenerationButton" Content="Start Git Generator..." Click="GitGenerationButton_Click" IsEnabled="{Binding CanGenerateGit}" ToolTip="{x:Static core:DOS2DETooltips.Button_StartGitGenerator}" />
						</StackPanel>
						
					</Grid>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</local:DOS2DEProjectsViewBase>
