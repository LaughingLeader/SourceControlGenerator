<UserControl x:Name="ProjectViewControlMain" x:Class="LL.SCG.DOS2.Controls.ProjectViewControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:LL.SCG.DOS2.Controls"
			 xmlns:core="clr-namespace:LL.SCG.DOS2.Core"
			 xmlns:c="clr-namespace:LL.SCG.Controls;assembly=SourceControlGenerator"
			 xmlns:cb="clr-namespace:LL.SCG.Controls.Behavior;assembly=SourceControlGenerator"
			 xmlns:cv="clr-namespace:LL.SCG.Converters;assembly=SourceControlGenerator"
			 xmlns:data="clr-namespace:LL.SCG.Data.View;assembly=SourceControlGenerator"
			 xmlns:proxy="clr-namespace:LL.SCG.Data.Proxy;assembly=SourceControlGenerator"
			 xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
			 mc:Ignorable="d" 
			 d:DesignHeight="500" d:DesignWidth="900"
			 KeyDown="ProjectViewControlMain_KeyDown" KeyUp="ProjectViewControlMain_KeyUp" Foreground="{x:Null}"
			 >
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/SourceControlGenerator;component/ThemeSystem/ResourceDictionary/MainAppDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="DataGrid_NoHighlight" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
				<Style.Triggers>
					<Trigger  Property="IsSelected" Value="true">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						<Setter Property="Background" Value="{x:Null}" />
						<Setter Property="BorderBrush" Value="{x:Null}" />
					</Trigger>
				</Style.Triggers>
			</Style>

			
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid x:Name="Projects_ParentGrid" Width="Auto" Height="Auto">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" Name="ManagedProjectsRow" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Grid x:Name="AvailableProjectsView" Grid.Column="1" Grid.Row="0" Background="{x:Null}" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" Name="AvailableProjectsRow" />
			</Grid.ColumnDefinitions>
			<StackPanel x:Name="SideWindowButtons" Grid.Column="0" Orientation="Vertical">
				<StackPanel.Resources>
					<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="-90" />
							</Setter.Value>
						</Setter>
					</Style>
				</StackPanel.Resources>
				<Button x:Name="Btn_AvailableProjects" Content="Available" ToolTip="{Binding AvailableProjectsToggleText}" Click="Btn_AvailableProjects_Click" HorizontalAlignment="Right" BorderThickness="1,0.5,0,1" />
			</StackPanel>
			<Grid Grid.Column="1">
				<Grid x:Name="NewProjects" >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Label Content="Available Projects" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Margin="0" ToolTip="{Binding Source={x:Static core:DOS2Tooltips.AvailableProjects}, Converter={StaticResource NewlineStringConverter}}" />
					<Grid Grid.Row="1" Width="200" MaxWidth="200">
						<Grid>

							<ListBox x:Name="AvailableProjectsList" ItemsSource="{Binding NewProjects, NotifyOnTargetUpdated=True}" HorizontalContentAlignment="Left" SelectionMode="Extended" SelectionChanged="AvailableProjectsList_SelectionChanged" MouseRightButtonUp="AvailableProjectsList_MouseRightButtonUp"
									 ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" cb:ListBoxSelectionBehavior.ClickSelection="True" TargetUpdated="AvailableProjectsList_TargetUpdated"
									 >
								<ListBox.ItemContainerStyle>
									<Style TargetType="ListBoxItem" BasedOn="{StaticResource MetroListBoxItem}">
										<Setter Property="Padding" Value="5" />
										<Setter Property="HorizontalAlignment" Value="Stretch"/>
										<Setter Property="Background" >
											<Setter.Value>
												<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;1.2'}" />

											</Setter.Value>
										</Setter>
									</Style>
								</ListBox.ItemContainerStyle>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Name}" ToolTip="{Binding Tooltip}" ToolTipService.InitialShowDelay="0" ToolTipService.BetweenShowDelay="0"/>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
							<TextBlock Text="No Unmanaged Projects Found" Visibility="{Binding NewProjects, Converter={StaticResource EmptyListVisibilityConverter}}" FontStyle="Italic" Foreground="#FF4D4D4D" Margin="5,5,0,5" Padding="0,0,10,0" HorizontalAlignment="Center" />
						</Grid>
					</Grid>
					<Grid Grid.Row="2">
						<Button x:Name="AddSelectedProjectsButton" Click="AddSelectedProjectsButton_Click" Content="{Binding ManageButtonsText}" HorizontalAlignment="Center" Margin="0,5" FontFamily="Roboto" MinWidth="129" MinHeight="20" />
					</Grid>
				</Grid>
			</Grid>
		</Grid>
		<Grid x:Name="ManagedProjectsBorder" Grid.Column="0" Grid.RowSpan="2" >
			<Grid x:Name="ManagedProjectsGrid" Margin="0">
				<Grid.Resources>
				</Grid.Resources>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*" MinHeight="100"/>
					<RowDefinition Height="5" Name="ProjectsGridSplit"/>
					<RowDefinition Height="Auto" MinHeight="45"/>
				</Grid.RowDefinitions>
				<Grid Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Label Content="Managed Projects" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" />
				</Grid>
				<Border Grid.Row="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
					<Grid x:Name="ProjectsDataGridScrollViewer" >
						<DataGrid x:Name="ManagedProjectsDataGrid" ItemsSource="{Binding ManagedProjects}" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="ManagedProjectsDataGrid_SelectionChanged" BorderBrush="{x:Null}" BorderThickness="0"  
								  CanUserAddRows="False" EnableRowVirtualization="False" FrameworkElement.Loaded="ManagedProjectsDataGrid_Loaded" ColumnWidth="Auto" CellStyle="{StaticResource DataGrid_NoHighlight}"
								  
								  >
							<DataGrid.Resources>
								<Style x:Key="ColumnElementStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
									<Setter Property="Margin" Value="5,0,10,0" />
								</Style>
								<Style x:Key="ProjectsHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MetroDataGridColumnHeader}">
									<Setter Property="HorizontalContentAlignment" Value="Center" />
								</Style>
								<Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
									<EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
								</Style>
							</DataGrid.Resources>
							<DataGrid.RowStyle>
								<Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
									<Setter Property="IsSelected" Value="{Binding Selected}" />
								</Style>
							</DataGrid.RowStyle>
							<DataGrid.Columns>
								<DataGridTemplateColumn MinWidth="25" CanUserResize="False" HeaderStyle="{StaticResource ProjectsHeaderStyle}"  >
									<DataGridTemplateColumn.Header>
										<CheckBox Checked="ManagedProjects_SelectAll" Unchecked="ManagedProjects_SelectNone" ToolTip="Select/Deselect All" />
									</DataGridTemplateColumn.Header>
									<DataGridTemplateColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="Margin" Value="0" />
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<CheckBox x:Name="ProjectSelectedCheckbox" IsChecked="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"
													  IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=IsSelected,Mode=OneWay}"
													  />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn MinWidth="60"  HeaderStyle="{StaticResource ProjectsHeaderStyle}" CanUserResize="False" CanUserSort="False" >
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="Shortcuts" ToolTipService.ToolTip="Project Shortcuts" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
												<StackPanel.Resources>
													<Style TargetType="Button">
														<Setter Property="MinHeight" Value="16" />
														<Setter Property="MinWidth" Value="16" />
														<Setter Property="MaxHeight" Value="16" />
														<Setter Property="MaxWidth" Value="16" />
													</Style>
												</StackPanel.Resources>
												<Button x:Name="Btn_Backup" ToolTip="Open Backup Folder..." Command="{Binding OpenBackupFolder}" >
													<Image Source="{Binding Source={StaticResource IconProxy}, Path=Data.Archive, FallbackValue={x:Null}}" Stretch="UniformToFill"/>
												</Button>
												<Button x:Name="Btn_GenGit" IsEnabled="{Binding GitGenerated}" Command="{Binding OpenGitFolder}" >
													<Image Stretch="UniformToFill" ToolTipService.ShowOnDisabled="True">
														<Image.Style>
															<Style TargetType="Image">
																<Style.Triggers>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Source" Value="{Binding Source={StaticResource IconProxy}, Path=Data.GitLogoDisabled, FallbackValue={x:Null}}" />
																		<Setter Property="ToolTip" Value="Git Repo Not Detected" />
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="True">
																		<Setter Property="Source" Value="{Binding Source={StaticResource IconProxy}, Path=Data.GitLogoEnabled, FallbackValue={x:Null}}" />
																		<Setter Property="ToolTip" Value="Open Git Repo..." />
																	</Trigger>
																</Style.Triggers>
															</Style>
														</Image.Style>
													</Image>
												</Button>
												<Button x:Name="Btn_DataFolders" ToolTip="Open Data Folder..." Click="SetDataFolderContextMenuTarget" >
													<Image Source="{Binding Source={StaticResource IconProxy}, Path=Data.Folder, FallbackValue={x:Null}}" Stretch="UniformToFill"/>
													<Button.ContextMenu>
														<ContextMenu>
															<MenuItem x:Name="Btn_EditorFolder" Header="Open Editor Folder..." Command="{Binding OpenEditorFolder}" />
															<MenuItem x:Name="Btn_ModsFolder" Header="Open Mods Folder..." Command="{Binding OpenModsFolder}" />
															<MenuItem x:Name="Btn_ProjectFolder" Header="Open Project Folder..." Command="{Binding OpenProjectFolder}" />
															<MenuItem x:Name="Btn_PublicFolder" Header="Open Public Folder..." Command="{Binding OpenPublicFolder}" />
														</ContextMenu>
													</Button.ContextMenu>
													<Button.Style>
														<Style TargetType="{x:Type Button}">
															<Style.Triggers>
																<EventTrigger RoutedEvent="Click">
																	<EventTrigger.Actions>
																		<BeginStoryboard>
																			<Storyboard>
																				<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
																					<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
																				</BooleanAnimationUsingKeyFrames>
																			</Storyboard>
																		</BeginStoryboard>
																	</EventTrigger.Actions>
																</EventTrigger>
															</Style.Triggers>
															<Setter Property="ContextMenu">
																<Setter.Value>
																	<ContextMenu>
																		<MenuItem />
																		<MenuItem />
																	</ContextMenu>
																</Setter.Value>
															</Setter>
														</Style>
													</Button.Style>
												</Button>
											</StackPanel>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn Header="Name" Binding="{Binding ModuleInfo.Name}" ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="50" Width="Auto" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="ToolTip" Value="{Binding ModuleInfo.Folder}" />
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Author" Binding="{Binding ModuleInfo.Author}" ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="50" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Version" Binding="{Binding Version}" ElementStyle="{StaticResource ColumnElementStyle}"  MinWidth="50" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Type" Binding="{Binding ModuleInfo.Type}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="40" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Description" x:Name="DescriptionColumn" Binding="{Binding ModuleInfo.Description}"  ElementStyle="{StaticResource ColumnElementStyle}" Width="70" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ModuleInfo.Description, Converter={StaticResource EmptyStringVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ModuleInfo.Description}" TextWrapping="Wrap" MaxWidth="200" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ModuleInfo.Description, Converter={StaticResource EmptyStringVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTemplateColumn Header="Icon"  HeaderStyle="{StaticResource ProjectsHeaderStyle}" >
									<DataGridTemplateColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Setter Property="ToolTip">
												<Setter.Value>
													<Image MaxWidth="256" MaxHeight="256" Stretch="Uniform" Source="{Binding ThumbnailPath, TargetNullValue={x:Null}}" Visibility="{Binding ThumbnailExists, FallbackValue=Collapsed}" />
												</Setter.Value>
											</Setter>
										</Style>
									</DataGridTemplateColumn.CellStyle>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Image MaxWidth="16" MaxHeight="16" Stretch="Uniform" Source="{Binding ThumbnailPath, TargetNullValue={x:Null}}" Visibility="{Binding ThumbnailExists, FallbackValue=Collapsed}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn Header="Created" Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="80" HeaderStyle="{StaticResource ProjectsHeaderStyle}" >
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding ProjectInfo.CreationDate, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding ProjectInfo.CreationDate, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Last Backup" Binding="{Binding LastBackup, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='d', FallbackValue=''}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="80" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell" BasedOn="{StaticResource DataGrid_NoHighlight}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding LastBackup, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Visible">
													<Setter Property="ToolTip">
														<Setter.Value>
															<TextBlock Text="{Binding LastBackup, Converter={StaticResource DateTimeToStringConverter}, ConverterParameter='f'}" />
														</Setter.Value>
													</Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding LastBackup, Converter={StaticResource EmptyValueVisibilityConverter}}" Value="Collapsed">
													<Setter Property="ToolTip" Value="{x:Null}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
							</DataGrid.Columns>
						</DataGrid>
					</Grid>
				</Border>
				<GridSplitter x:Name="ProjectsDataGridSplitter" Grid.Row="2" Height="2" HorizontalAlignment="Stretch" Foreground="{x:Null}"/>
				<Grid x:Name="ProjectActions" Grid.Row="3" MaxHeight="30" VerticalAlignment="Top" Margin="0,5,0,0">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
						<StackPanel.Resources>
							<Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
								<Setter Property="Margin" Value="4,2" />
								<Setter Property="Padding" Value="4,2" />
							</Style>
						</StackPanel.Resources>
						<Button x:Name="BackupButton" Content="Backup Selected" Click="BackupButton_Click" IsEnabled="{Binding ProjectSelected}" />
						<Button x:Name="BackupSeletedButton" Content="Backup Selected To..." Click="BackupSelectedButton_Click" IsEnabled="{Binding ProjectSelected}" />
						<Button x:Name="GitGenerationButton" Content="Create Git Repos for Selected..." Click="GitGenerationButton_Click" IsEnabled="{Binding CanGenerateGit}" />
					</StackPanel>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
