<Window x:Name="MainAppWindow" x:Class="LL.DOS2.SourceControl.Windows.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:LL.DOS2.SourceControl"
		xmlns:c="clr-namespace:LL.DOS2.SourceControl.Controls"
		xmlns:cv="clr-namespace:LL.DOS2.SourceControl.Converters"
		xmlns:fc="clr-namespace:LL.DOS2.SourceControl.Commands"
		xmlns:core="clr-namespace:LL.DOS2.SourceControl.Core"
		xmlns:vdata="clr-namespace:LL.DOS2.SourceControl.Data.View"
		mc:Ignorable="d"
		Title="DOS2 Source Control Helper" Height="600" Width="1024" Loaded="Window_Loaded" Closing="MainAppWindow_Closing"
		WindowStartupLocation="CenterOwner"
		>
	<Window.Resources>
		<cv:EmptyListVisibilityConverter x:Key="EmptyListVisibilityConverter"/>
		<cv:FooterOutputColorConverter x:Key="FooterOutputColorConverter"/>
		<CollectionViewSource x:Key="ActiveProjectsViewSource" CollectionViewType="ListCollectionView"/>
		<CollectionViewSource x:Key="ManagedProjectsViewSource" CollectionViewType="ListCollectionView"/>
		<DataTemplate x:Key="AlternatingKeywordsTemplate" DataType="c:TemplateKeywordControl">
			<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
									  KeywordValue="{Binding KeywordValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		</DataTemplate>
		<SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
		<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
		<SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
		<SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
		<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
		<SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
		<SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
		<SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
		<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
		<SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
		<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
		<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.RowDefinitions>
									<RowDefinition Height="19"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="-90"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="180"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.RowDefinitions>
									<RowDefinition Height="19"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="90"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderHeaderFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Border>
							<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="19"/>
								</Grid.ColumnDefinitions>
								<Ellipse x:Name="circle" Grid.Column="2" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
								<Path x:Name="arrow" Grid.Column="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								<ContentPresenter Grid.Column="0" HorizontalAlignment="Left" Margin="2,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderRightButton" TargetType="{x:Type Expander}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Expander}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
							<DockPanel>
								<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</DockPanel>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="true">
								<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Right">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Up">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Left">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Grid Width="Auto" Height="Auto">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<DockPanel Grid.Row="0">
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="File">
					<MenuItem Header="Refresh Available Projects" />
					<MenuItem Header="Backup All Projects" />
					<MenuItem Header="Backup All Projects To..." />
				</MenuItem>
				<MenuItem Header="Options">
					<MenuItem x:Name="LogWindowToggle" Header="{Binding LogVisibleText, ElementName=MainAppWindow}" Click="LogWindowToggle_Click" />
					<MenuItem Header="Save Log..." />
				</MenuItem>
				<MenuItem Header="Help">
					<MenuItem Header="About" />
					<MenuItem Header="Report Bug / Feedback..." />
					<MenuItem Header="Github Source..." />
				</MenuItem>
			</Menu>
		</DockPanel>
		<TabControl x:Name="MainTabsControl" Grid.Row="1" SelectionChanged="PreventInitialTextboxFocus" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Padding="0">
			<TabItem Header="Projects" >
				<Grid x:Name="Projects_ParentGrid" Width="Auto" Height="Auto">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" Name="ManagedProjectsRow" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid x:Name="AvailableProjectsView" Grid.Column="1" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" Name="AvailableProjectsRow" />
						</Grid.ColumnDefinitions>
						<StackPanel x:Name="SideWindowButtons" Grid.Column="0" Orientation="Vertical" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" >
							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="LayoutTransform">
										<Setter.Value>
											<RotateTransform Angle="-90" />
										</Setter.Value>
									</Setter>
								</Style>
							</StackPanel.Resources>
							<Button x:Name="Btn_AvailableProjects" Content="Available" ToolTip="{Binding AvailableProjectsToggleText}" Click="Btn_AvailableProjects_Click" HorizontalAlignment="Right" BorderThickness="1,0.5,0,1" />
						</StackPanel>
						<ScrollViewer Grid.Column="1" Padding="10,0,10,0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" >
							<Grid x:Name="AvailableProjects" >
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Label Content="Available Projects" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Margin="0" />
								<Grid Grid.Row="1"  MaxHeight="300" Width="200" MaxWidth="200">
									<Grid>
										<ListBox x:Name="AvailableProjectsList" ItemsSource="{Binding AvailableProjects}" HorizontalContentAlignment="Left" SelectionMode="Extended" SelectionChanged="AvailableProjectsList_SelectionChanged" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
											<ListBox.ItemContainerStyle>
												<Style TargetType="ListBoxItem">
													<Setter Property="Padding" Value="5" />
													<Setter Property="HorizontalAlignment" Value="Stretch"/>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Name}" ToolTip="{Binding Tooltip}" ToolTipService.InitialShowDelay="0" ToolTipService.BetweenShowDelay="0"/>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
										<TextBlock Text="No New Mod Projects Found" Visibility="{Binding AvailableProjects, Converter={StaticResource EmptyListVisibilityConverter}}" FontStyle="Italic" Foreground="#FF4D4D4D" Margin="5,5,0,5" Padding="0,0,10,0" HorizontalAlignment="Center" />
									</Grid>
								</Grid>
								<Grid Grid.Row="2" Margin="0,5,0,0">
									<Button x:Name="AddSelectedProjectsButton" Click="AddSelectedProjectsButton_Click" Content="{Binding ManageButtonsText}" HorizontalAlignment="Center" Padding="10,5" FontFamily="Roboto" MinWidth="129" MinHeight="20" />
								</Grid>
							</Grid>
						</ScrollViewer>
					</Grid>
					<Grid x:Name="ManagedProjectsBorder" Grid.Column="0" >
						<Grid x:Name="ManagedProjectsGrid" Margin="0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*" MinHeight="100"/>
								<RowDefinition Height="5" Name="ProjectsGridSplit"/>
								<RowDefinition Height="*" MinHeight="30"/>
							</Grid.RowDefinitions>
							<Grid Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Label Content="Managed Projects" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" />
							</Grid>
							<Border Grid.Row="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
								<ScrollViewer x:Name="ProjectsDataGridScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
									<DataGrid x:Name="ManagedProjectsDataGrid" ItemsSource="{Binding ManagedProjects}" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="ManagedProjectsDataGrid_SelectionChanged" BorderBrush="{x:Null}" BorderThickness="0" >
										<DataGrid.Resources>
											<Style x:Key="ColumnElementStyle" TargetType="TextBlock">
												<Setter Property="Margin" Value="5,0,10,0" />
											</Style>
										</DataGrid.Resources>
										<DataGrid.Columns>
											<DataGridTemplateColumn>
												<DataGridTemplateColumn.Header>
													<CheckBox Checked="ManagedProjects_SelectAll" Unchecked="ManagedProjects_SelectNone" ToolTip="Select/Deselect All" />
												</DataGridTemplateColumn.Header>
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<CheckBox IsChecked="{Binding Selected}" />
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
											</DataGridTemplateColumn>
											<DataGridTemplateColumn Width="Auto" >
												<DataGridTemplateColumn.HeaderTemplate>
													<DataTemplate>
														<TextBlock Text="Shortcuts" ToolTipService.ToolTip="Project Shortcuts" />
													</DataTemplate>
												</DataGridTemplateColumn.HeaderTemplate>
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<StackPanel Orientation="Horizontal">
															<StackPanel.Resources>
																<Style TargetType="Button">
																	<Setter Property="MinHeight" Value="16" />
																	<Setter Property="MinWidth" Value="16" />
																	<Setter Property="MaxHeight" Value="16" />
																	<Setter Property="MaxWidth" Value="16" />
																</Style>
															</StackPanel.Resources>
															<Button x:Name="Btn_Backup" ToolTip="Open Backup Folder..." >
																<Image Source="/DOS2SourceControl;component/Resources/Icons/7zipIcon.png" Stretch="UniformToFill"/>
															</Button>
															<Button x:Name="Btn_GenGit" IsEnabled="{Binding GitGenerated}" >
																<Image Stretch="UniformToFill" ToolTipService.ShowOnDisabled="True">
																	<Image.Style>
																		<Style TargetType="Image">
																			<Style.Triggers>
																				<Trigger Property="IsEnabled" Value="False">
																					<Setter Property="Source" Value="/DOS2SourceControl;component/Resources/Icons/GitLogo_Disabled.png" />
																					<Setter Property="ToolTip" Value="Git Repo Not Detected" />
																				</Trigger>
																				<Trigger Property="IsEnabled" Value="True">
																					<Setter Property="Source" Value="/DOS2SourceControl;component/Resources/Icons/GitLogo.png" />
																					<Setter Property="ToolTip" Value="Open Git Repo..." />
																				</Trigger>
																			</Style.Triggers>
																		</Style>
																	</Image.Style>
																</Image>
															</Button>
															<Button x:Name="Btn_DataFolders" ToolTip="Open Data Folder..." >
																<Image Source="/DOS2SourceControl;component/Resources/Icons/Folder.png" Stretch="UniformToFill"/>
																<Button.ContextMenu>
																	<ContextMenu>
																		<MenuItem Header="Open Mods Folder..." />
																		<MenuItem Header="Open Public Folder..." />
																		<MenuItem Header="Open Editor Folder..." />
																		<MenuItem Header="Open Project Folder..." />
																	</ContextMenu>
																</Button.ContextMenu>
																<Button.Style>
																	<Style TargetType="{x:Type Button}">
																		<Style.Triggers>
																			<EventTrigger RoutedEvent="Click">
																				<EventTrigger.Actions>
																					<BeginStoryboard>
																						<Storyboard>
																							<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
																								<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
																							</BooleanAnimationUsingKeyFrames>
																						</Storyboard>
																					</BeginStoryboard>
																				</EventTrigger.Actions>
																			</EventTrigger>
																		</Style.Triggers>
																		<Setter Property="ContextMenu">
																			<Setter.Value>
																				<ContextMenu>
																					<MenuItem />
																					<MenuItem />
																				</ContextMenu>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</Button.Style>
															</Button>
														</StackPanel>
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
											</DataGridTemplateColumn>
											<DataGridTextColumn Header="Name" Binding="{Binding ModuleInfo.Name}" Width="Auto" ElementStyle="{StaticResource ColumnElementStyle}" />
											<DataGridTextColumn Header="Author" Binding="{Binding ModuleInfo.Author}" ElementStyle="{StaticResource ColumnElementStyle}" />
											<DataGridTextColumn Header="Version" Binding="{Binding Version}" ElementStyle="{StaticResource ColumnElementStyle}" />
											<DataGridTextColumn Header="Type" Binding="{Binding ModuleInfo.Type}"  ElementStyle="{StaticResource ColumnElementStyle}" />
											<DataGridTextColumn Header="Description" Binding="{Binding ModuleInfo.Description}"  ElementStyle="{StaticResource ColumnElementStyle}" />
											<DataGridTextColumn Header="Last Backup" Binding="{Binding LastBackupText}"  ElementStyle="{StaticResource ColumnElementStyle}" />
										</DataGrid.Columns>
										<DataGrid.CellStyle>
											<!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
											<Style TargetType="{x:Type DataGridCell}">
												<Style.Triggers>
													<Trigger  Property="IsSelected" Value="true">
														<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
														<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
														<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
													</Trigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
															<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
														</MultiDataTrigger.Conditions>
														<MultiDataTrigger.Setters>
															<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
															<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
															<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
														</MultiDataTrigger.Setters>
													</MultiDataTrigger>
												</Style.Triggers>
											</Style>
										</DataGrid.CellStyle>
									</DataGrid>
								</ScrollViewer>
							</Border>
							<GridSplitter x:Name="ProjectsDataGridSplitter" Grid.Row="2" Height="2" HorizontalAlignment="Stretch" Foreground="{x:Null}" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
							<Grid x:Name="ProjectActions" Grid.Row="3" MaxHeight="30" VerticalAlignment="Top" Margin="0,5,0,0">
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
									<StackPanel.Resources>
										<Style TargetType="Button">
											<Setter Property="Margin" Value="2,0" />
											<Setter Property="Padding" Value="4,2,4,2" />
											<Setter Property="IsEnabled" Value="{Binding ProjectSelected}" />
										</Style>
									</StackPanel.Resources>
									<Button x:Name="BackupButton" Content="Backup Selected" Click="BackupButton_Click" />
									<Button x:Name="BackupSeletedButton" Content="Backup Selected To..." Click="BackupSeletedButton_Click" />
									<Button x:Name="GitGenerationButton" Content="Create Git Repos for Selected..." Click="GitGenerationButton_Click" />
								</StackPanel>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem Header="Templates">
				<TabControl TabStripPlacement="Left" Padding="0,5,0,0" >
					<TabControl.Template>
						<ControlTemplate TargetType="TabControl">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<ScrollViewer VerticalScrollBarVisibility="Auto" >
									<TabPanel x:Name="HeaderPanel"
						  Panel.ZIndex ="1" 
						  KeyboardNavigation.TabIndex="1"
						  Grid.Column="0"
						  Grid.Row="0"
						  Margin="2,2,2,0"
						  IsItemsHost="true"/>
								</ScrollViewer>
								<ContentPresenter x:Name="PART_SelectedContentHost"
									  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									  Margin="{TemplateBinding Padding}"
									  ContentSource="SelectedContent" Grid.Column="1"/>
							</Grid>
						</ControlTemplate>
					</TabControl.Template>
					<TabControl.Resources>
						<CollectionViewSource x:Key="TemplateTabs" Source="{Binding Templates}"/>
						<DataTemplate DataType="{x:Type vdata:TemplateEditorData}">
							<c:TemplateEditorControl DataContext="{Binding}" TemplateData="{Binding}" />
						</DataTemplate>
						<Style TargetType="{x:Type TabItem}">
							<Setter Property="Header" Value="{Binding Path=Name}" />
						</Style>
						<Style TargetType="{x:Type c:TemplateEditorControl}">
							
						</Style>
					</TabControl.Resources>
					<TabControl.ItemsSource>
						<CompositeCollection>
							<CollectionContainer Collection="{Binding Source={StaticResource TemplateTabs}}" />
							
						</CompositeCollection>
					</TabControl.ItemsSource>
				</TabControl>
			</TabItem>
			<TabItem x:Name="KeywordsTab" Header="Keywords">
				<TabItem.Resources>
					<Style x:Key="KeywordBorderStyle" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.ControlLightColor}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.MenuColor}" />
							</Setter.Value>
						</Setter>
					</Style>
					<Style x:Key="KeywordBorderStyleMouseOver" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.ControlLightColor}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.MenuColor}" />
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{x:Static SystemColors.ControlLightLightColor}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</TabItem.Resources>
				<Grid >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Width="Auto" Height="Auto" x:Name="KeywordsHeaderControls" Margin="5" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Label x:Name="TemplateLabel" Content="Template Keywords" Grid.Column="0" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{x:Static vdata:TooltipText.TemplateKeywords}" Padding="2,0,50,0">
							<Label.Style>
								<Style TargetType="Label">
									<Setter Property="Foreground" Value="Black" />
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Foreground" Value="#FF3A6FFF" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<StackPanel Grid.Column="1" HorizontalAlignment="Right" x:Name="KeywordCommandsGrid" Orientation="Horizontal" >
							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
								</Style>
							</StackPanel.Resources>
							<c:FileBrowseControl OpenFileText="Select Keywords File" FileLocationText="{Binding AppSettings.KeywordsFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												OnOpen="{Binding LoadKeywords}"/>
							<Button x:Name="SaveKeywordsButton" Content="Save" Click="SaveKeywordsButton_Click" />
							<Button x:Name="SaveAsKeywordsButton" Content="Save As..." Click="SaveAsKeywordsButton_Click" />
							<Button Content="Default..." Click="KeywordsList_Default_Click" ToolTip="Reset Keywords to Default" />
						</StackPanel>
					</Grid>
					<ScrollViewer Grid.Row="1" x:Name="KeywordListScrollViewer" Margin="10,0,10,0" VerticalScrollBarVisibility="Auto" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" >
						<Grid x:Name="KeywordListGrid" Margin="10">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
								<Grid x:Name="DefaultKeywords" >
									<Grid.Resources>
										<Style TargetType="c:TemplateKeywordControl">
											<Setter Property="KeywordNameReadOnly" Value="True"/>
											<Setter Property="KeywordValueReadOnly" Value="True"/>
										</Style>
									</Grid.Resources>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="*" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}" >
										<TextBlock Text="Application Keywords (Auto-Assigned)" Margin="2" Padding="2" FontFamily="Neuton" />
									</Border>
									<ItemsControl Grid.Row="1" x:Name="AppKeywordsList" ItemsSource="{Binding AppKeyList}" >
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="c:TemplateKeywordControl">
												<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName}" KeywordValue="{Binding KeywordValue}" KeywordNameReadOnly="True" KeywordValueReadOnly="True" />
											</DataTemplate>
										</ItemsControl.ItemTemplate>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Vertical" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
									<Border Grid.Row="2" Style="{StaticResource KeywordBorderStyleMouseOver}" >
										<Expander x:Name="DateKeywordsExpander"  Header="Date Keywords" Style="{DynamicResource ExpanderRightButton}" Background="{x:Null}" FontFamily="Neuton" >
											<ScrollViewer FlowDirection="LeftToRight" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" MaxHeight="125">
												<ItemsControl ItemsSource="{Binding DateKeyList}" >
													<ItemsControl.ItemTemplate>
														<DataTemplate DataType="c:TemplateKeywordControl">
															<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName}" KeywordValue="{Binding KeywordValue}" KeywordNameReadOnly="True" KeywordValueReadOnly="True" />
														</DataTemplate>
													</ItemsControl.ItemTemplate>
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Vertical" />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
												</ItemsControl>
											</ScrollViewer>
										</Expander>
									</Border>
								</Grid>
							</ScrollViewer>
							<Grid x:Name="ParentGrid_UserKeywords" Grid.Row="1" >
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}" >
									<TextBlock Text="User Keywords" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" Margin="2" Padding="2" FontFamily="Neuton" />
								</Border>
								<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
									<StackPanel Orientation="Vertical" DataContext="{Binding UserKeywords}">
										<c:TemplateKeywordControl KeywordName="$DateCustom" KeywordValue="{Binding DateCustom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeywordNameReadOnly="True" KeywordValueReadOnly="False" FontFamily="Neuton"  />
										<ItemsControl x:Name="UserKeywords" ItemsSource="{Binding Keywords}" ItemTemplate="{StaticResource AlternatingKeywordsTemplate}" AlternationCount="2" >
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Vertical" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>
								</ScrollViewer>
							</Grid>
						</Grid>
					</ScrollViewer>
					<Grid Grid.Row="2" x:Name="KeywordsFooterControls">
						<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
									<Setter Property="Width" Value="55" />
								</Style>
							</StackPanel.Resources>
							<Button Content="Add" Click="KeywordsList_Add_Click" ToolTip="Add New Keyword"/>
							<Button Content="Remove" Click="KeywordsList_Remove_Click" ToolTip="Remove Last Keyword" />
						</StackPanel>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem x:Name="Tab_Settings" Header="Settings">
				<Grid x:Name="Settings_ParentGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
					<Grid.Resources>
						<Style TargetType="{x:Type TextBlock}">
							<Setter Property="Padding" Value="0,5,10,5" />
							<Setter Property="TextAlignment" Value="Left" />
							<Setter Property="HorizontalAlignment" Value="Left" />
						</Style>
					</Grid.Resources>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*" MinWidth="300"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<TextBlock Grid.Row="0" Text="Backup Root Directory"/>
					<TextBlock Grid.Row="1" Text="Repository Root Directory"/>

					<c:FileBrowseControl Grid.Column="1" Grid.Row="0" FileBrowseType="Directory" OpenFileText="Select Backup Root Directory" FileLocationText="{Binding AppSettings.BackupRootDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
					<c:FileBrowseControl Grid.Column="1" Grid.Row="1" FileBrowseType="Directory" OpenFileText="Select Repository Root Directory" FileLocationText="{Binding AppSettings.GitRootDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</Grid>
			</TabItem>
		</TabControl>
		<Grid x:Name="FooterGrid" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="105" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Border Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
			<Border Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />

			<TextBox Grid.Column="0" x:Name="FooterOuputTextboxDate" Text="{Binding Path=FooterOutputDate, ElementName=MainAppWindow}" IsReadOnly="True" Margin="0" BorderThickness="0" TextAlignment="Center" Background="{x:Null}" />
			<TextBox Grid.Column="1" x:Name="FooterOuputTextboxText" Text="{Binding Path=FooterOutputText, ElementName=MainAppWindow}" IsReadOnly="True" TextAlignment="Left" Foreground="{Binding Path=FooterOutputType, ElementName=MainAppWindow, Converter={StaticResource FooterOutputColorConverter}}" Margin="0" BorderThickness="0" Background="{x:Null}" Padding="4,0,0,0" />
		</Grid>
	</Grid>
</Window>
