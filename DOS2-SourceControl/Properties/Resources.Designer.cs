//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LL.DOS2.SourceControl.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LL.DOS2.SourceControl.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $ProjectName Changelog
        ///=======
        ///# 1.0.0.0
        ///* Initial Release.
        /// </summary>
        public static string DefaultChangelog {
            get {
                return ResourceManager.GetString("DefaultChangelog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #Levels
        ///######################
        ///Mods/$ModFolderName/Levels/*
        ///Mods/$ModFolderName/Globals/*
        ///Editor/Mods/$ModFolderName/Levels/*
        ///
        ///#Compiled Story files
        ///######################
        ///*.div
        ///*.raw
        ///
        ///#Assets
        ///######################*
        ///Public/$ModFolderName/Assets/*
        ///#Public/$ModFolderName/GUI/*
        ///
        ///#Editor files
        ///######################
        ///StatsEditorConfig.xml
        ///DockPanel.config
        ///EditorBrowserMetadata.*
        ///EffectEditorConfig.xml
        ///
        ///#Assets
        ///######################
        ///*.gr2
        ///*.dae
        ///*.swf
        ///*.bullet
        ///*.dds
        ///*.tga
        ///*.png
        ///*. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DefaultGitIgnore {
            get {
                return ResourceManager.GetString("DefaultGitIgnore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $ProjectName for Divinity: Original Sin 2
        ///=======
        ///
        ///### Features:
        ///
        ///
        ///### Releases
        ///* [Steam Workshop]() 
        ///* [Nexus]()
        ///
        ///### Attribution
        ///- [Divinity: Original Sin 2](http://store.steampowered.com/app/435150/Divinity_Original_Sin_2/), a game by [Larian Studios](http://larian.com/).
        /// </summary>
        public static string DefaultReadme {
            get {
                return ResourceManager.GetString("DefaultReadme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #Keywords
        ///# ProjectName = The name of the project, without the GUID.
        ///# ProjectGUID = The GUID(UUID) of the project.
        ///
        ///#Directories to scan
        ///
        ///Editor/Mods/ProjectName_ProjectGUID
        ///Mods/ProjectName_ProjectGUID
        ///Projects/ProjectName
        ///Public/ProjectName_ProjectGUID.
        /// </summary>
        public static string DirectoryLayout {
            get {
                return ResourceManager.GetString("DirectoryLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apache License
        ///                           Version 2.0, January 2004
        ///                        http://www.apache.org/licenses/
        ///
        ///   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///   1. Definitions.
        ///
        ///      &quot;License&quot; shall mean the terms and conditions for use, reproduction,
        ///      and distribution as defined by Sections 1 through 9 of this document.
        ///
        ///      &quot;Licensor&quot; shall mean the copyright owner or entity authorized by
        ///      the copyright owner that is granting the License.
        ///
        ///      &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_Apache {
            get {
                return ResourceManager.GetString("License_Apache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///to take away your free [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_GNU {
            get {
                return ResourceManager.GetString("License_GNU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) $DateYear $Author
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyright n [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_MIT {
            get {
                return ResourceManager.GetString("License_MIT", resourceCulture);
            }
        }
    }
}
