<UserControl
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:SCG.Controls"
			 xmlns:scg="clr-namespace:SCG"
			 xmlns:data="clr-namespace:SCG.Data.View"
			 xmlns:enum="clr-namespace:SCG.Enum"
			 xmlns:cv="clr-namespace:SCG.Converters"
			 xmlns:theme="clr-namespace:SCG.ThemeSystem"
			 xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Name="AddTemplateMain" x:Class="SCG.Controls.AddTemplateControl"
			 mc:Ignorable="d" 
			 d:DesignHeight="300" d:DesignWidth="500" IsVisibleChanged="AddTemplateMain_IsVisibleChanged" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
			 >

	<UserControl.Resources>
		<cv:EnumToCollectionConverter x:Key="EnumConverter" />

	</UserControl.Resources>
	<Grid DataContext="{Binding NewTemplateData}">
		<Border HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Opacity="1" />
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid>
				<Label Content="Create New Template" />
			</Grid>
			<Border Grid.Row="1"
					Background="{Binding Source={x:Static theme:ThemeController.CurrentTheme}, Path=Global.Background}"
					Margin="10,0,10,0"
					Padding="5"
					BorderBrush="#4CFFFFFF"
					BorderThickness="4">
				<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" x:Name="TemplatePropertiesGrid" >
					<Grid >

						<Grid.Resources>
							<Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
								<Setter Property="VerticalAlignment" Value="Center" />
							</Style>
							<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
								<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
								<Setter Property="Margin" Value="5" />
							</Style>
							<Style TargetType="{x:Type Border}" x:Key="LeftGridLines" >
								<Setter Property="BorderThickness" Value="1,1,0,0" />
							</Style>
							<Style TargetType="{x:Type Border}" x:Key="RightGridLines" >
								<Setter Property="BorderThickness" Value="1,1,1,0" />
							</Style>
						</Grid.Resources>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<Label ToolTip="The ID of the template. Required." >
							<TextBlock Text="ID*">
								<TextBlock.TextEffects>
									<TextEffect PositionStart="2" PositionCount="1" Foreground="Red"/>
								</TextBlock.TextEffects>
							</TextBlock>
						</Label>
						<Label Grid.Row="1" ToolTip="The name visible on the tab button. Required." >
							<TextBlock Text="Tab Name*">
								<TextBlock.TextEffects>
									<TextEffect PositionStart="8" PositionCount="1" Foreground="Red"/>
								</TextBlock.TextEffects>
							</TextBlock>
						</Label>
						<Label Grid.Row="2" ToolTip="Default filename used when saving the template. Required." >
							<TextBlock Text="Template Filename*">
								<TextBlock.TextEffects>
									<TextEffect PositionStart="17" PositionCount="1" Foreground="Red"/>
								</TextBlock.TextEffects>
							</TextBlock>
						</Label>
						<Label Content="Label Text" Grid.Row="3" ToolTip="The template's label text, displayed at the top of the template editor." />
						<Label Content="Export Path" Grid.Row="4" ToolTip="The export file path when generating the template." />
						<Label Content="ToolTip" Grid.Row="5" ToolTip="The text used for the label's tooltip." />
						<Label Content="Default Editor Text" Grid.Row="6" ToolTip="The default text to use for the template. This text is also used when resetting the text to default." />

						<TextBox Grid.Column="1" Text="{Binding ID, Mode=TwoWay}" />
						<TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Name, Mode=TwoWay}" />
						<TextBox Grid.Column="1" Grid.Row="2" Text="{Binding LabelText, Mode=TwoWay}" />
						<TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Filename, Mode=TwoWay}" />
						<TextBox Grid.Column="1" Grid.Row="4" Text="{Binding ExportPath, Mode=TwoWay}" />
						<TextBox Grid.Column="1" Grid.Row="5" Text="{Binding ToolTipText, Mode=TwoWay}" />

						<Grid Grid.Column="1" Grid.Row="6" Background="{Binding Source={x:Static theme:ThemeController.CurrentTheme}, Path=Global.Background}">
							<Grid.Resources>
								<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
									<Setter Property="Background" Value="{x:Null}" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="true">
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type TextBox}">
														<!--<TextBlock Text="{TemplateBinding Text}" TextTrimming="CharacterEllipsis" Background="{Binding Source={x:Static theme:ThemeController.CurrentTheme}, Path=Global.Background, Converter={DynamicResource ModifyColorConverter}, ConverterParameter=1.2}" />-->
														<TextBlock Text="{TemplateBinding Text}" TextTrimming="CharacterEllipsis" Background="{Binding Source={x:Static theme:ThemeController.CurrentTheme}, Path=Global.Background}" />
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto"  />
							</Grid.ColumnDefinitions>
							<ComboBox Text="Type" Padding="5,0,0,0" IsEditable="False"
								ItemsSource="{Binding Source={scg:EnumBindingSource {x:Type enum:EditorTextPropertyType}}}"
								SelectedValue="{Binding EditorTextProperty}" >
								<ComboBox.Template>
									<ControlTemplate TargetType="{x:Type ComboBox}">
										<Grid x:Name="templateRoot" SnapsToDevicePixels="True">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
											</Grid.ColumnDefinitions>
											<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
												<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
													<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
														<ScrollViewer x:Name="DropDownScrollViewer">
															<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
																<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
																	<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
																</Canvas>
																<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
															</Grid>
														</ScrollViewer>
													</Border>
												</Themes:SystemDropShadowChrome>
											</Popup>
											<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
												<ToggleButton.Style>
													<Style TargetType="{x:Type ToggleButton}" >
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="ClickMode" Value="Press"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ToggleButton}">
																	<Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
																		<Border.Background>
																			<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																				<GradientStop Color="#FFF0F0F0" Offset="0"/>
																				<GradientStop Color="#FFE5E5E5" Offset="1"/>
																			</LinearGradientBrush>
																		</Border.Background>
																		<Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="0">
																			<Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
																		</Border>
																	</Border>
																	<ControlTemplate.Triggers>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
																				<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
																				<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
																				<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot" Value="White"/>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
																			<Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
																			<Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
																		</MultiDataTrigger>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="Fill" TargetName="Arrow" Value="Black"/>
																		</Trigger>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																						<GradientStop Color="#FFECF4FC" Offset="0"/>
																						<GradientStop Color="#FFDCECFC" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
																		</MultiDataTrigger>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot" Value="White"/>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
																			<Setter Property="Background" TargetName="splitBorder">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																						<GradientStop Color="#FFEBF4FC" Offset="0"/>
																						<GradientStop Color="#FFDCECFC" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
																		</MultiDataTrigger>
																		<Trigger Property="IsPressed" Value="True">
																			<Setter Property="Fill" TargetName="Arrow" Value="Black"/>
																		</Trigger>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																						<GradientStop Color="#FFDAECFC" Offset="0"/>
																						<GradientStop Color="#FFC4E0FC" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
																		</MultiDataTrigger>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot" Value="White"/>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
																			<Setter Property="Background" TargetName="splitBorder">
																				<Setter.Value>
																					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
																						<GradientStop Color="#FFDAEBFC" Offset="0"/>
																						<GradientStop Color="#FFC4E0FC" Offset="1"/>
																					</LinearGradientBrush>
																				</Setter.Value>
																			</Setter>
																			<Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
																		</MultiDataTrigger>
																		<Trigger Property="IsEnabled" Value="False">
																			<Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
																		</Trigger>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
																		</MultiDataTrigger>
																		<MultiDataTrigger>
																			<MultiDataTrigger.Conditions>
																				<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
																				<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
																			</MultiDataTrigger.Conditions>
																			<Setter Property="Background" TargetName="templateRoot" Value="White"/>
																			<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
																			<Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
																			<Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
																		</MultiDataTrigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ToggleButton.Style>
											</ToggleButton>
											<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
												<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
												<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
											</Trigger>
											<Trigger Property="HasItems" Value="False">
												<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
											</Trigger>
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsGrouping" Value="True"/>
													<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
												</MultiTrigger.Conditions>
												<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
											</MultiTrigger>
											<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
												<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
												<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</ComboBox.Template>
							</ComboBox>
							<TextBox x:Name="EditorTextTextbox" Grid.Column="1" Margin="5,0,5,0" Text="{Binding DefaultEditorText, FallbackValue=Test, Mode=TwoWay}" Background="{x:Null}" VerticalAlignment="Center"/>
							<Button x:Name="EditorTextExpandButton" Grid.Column="2" Content="Edit" Click="EditorTextExpandButton_Click" Padding="2,0" ToolTip="Edit Text (Multiline Support)"/>
						</Grid>


						<Border Style="{StaticResource LeftGridLines}"/>
						<Border Style="{StaticResource LeftGridLines}" Grid.Row="1"/>
						<Border Style="{StaticResource LeftGridLines}" Grid.Row="2"/>
						<Border Style="{StaticResource LeftGridLines}" Grid.Row="3"/>
						<Border Style="{StaticResource LeftGridLines}" Grid.Row="4"/>
						<Border Style="{StaticResource LeftGridLines}" Grid.Row="5"/>
						<Border Style="{StaticResource LeftGridLines}" Grid.Row="6" BorderThickness="1,1,0,1" />

						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" />
						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" Grid.Row="1"/>
						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" Grid.Row="2"/>
						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" Grid.Row="3"/>
						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" Grid.Row="4"/>
						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" Grid.Row="5"/>
						<Border Style="{StaticResource RightGridLines}" Grid.Column="1" Grid.Row="6" BorderThickness="1" />
					</Grid>
				</ScrollViewer>
			</Border>
			<StackPanel x:Name="ActionButtonsPanel" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
				<Button x:Name="ConfirmButton" Content="Create" Padding="5" ToolTip="Create Template" IsEnabled="{Binding IsValid}" Click="ConfirmButton_Click" Command="{Binding ConfirmCommand, ElementName=AddTemplateMain}" />
				<Button x:Name="CancelButton" Content="Cancel" Padding="5" ToolTip="Cancel" Click="CancelButton_Click" Command="{Binding CancelCommand, ElementName=AddTemplateMain}" />
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
