<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:SCG.Controls"
	xmlns:cb="clr-namespace:SCG.Controls.Behavior"
	xmlns:core="clr-namespace:SCG.Core"
	xmlns:cv="clr-namespace:SCG.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:data="clr-namespace:SCG.Data.View"
	xmlns:main="clr-namespace:SCG"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:proxy="clr-namespace:SCG.Data.Proxy"
	xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:theme="clr-namespace:SCG.ThemeSystem"
	xmlns:window="clr-namespace:SCG.Windows"
	x:Name="MainAppDictionary"
	mc:Ignorable="d">
	<proxy:AppControllerProxy x:Key="AppControllerProxy" Data="{x:Static core:AppController.Main}" />

	<BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
	<cv:BindingFallbackConverter x:Key="BindingFallbackConverter" />
	<cv:ColorToBrushConverter x:Key="ColorToBrushConverter" />
	<cv:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
	<cv:EmptyListVisibilityConverter x:Key="EmptyListVisibilityConverter" />
	<cv:EmptyStringVisibilityConverter x:Key="EmptyStringVisibilityConverter" />
	<cv:EmptyValueVisibilityConverter x:Key="EmptyValueVisibilityConverter" />
	<cv:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
	<cv:FileValidationColorConverter x:Key="FileValidationColorConverter" />
	<cv:FooterOutputColorConverter x:Key="FooterOutputColorConverter" />
	<cv:GrayscaleTintImageConverter x:Key="GrayscaleTintImageConverter" />
	<cv:IntToGridLengthConverter x:Key="IntToGridLengthConverter" />
	<cv:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
	<cv:ListViewStarWidthConverter x:Key="ListViewStarWidthConverter" />
	<cv:LogTypeColorConverter x:Key="LogTypeColorConverter" />
	<cv:MultiValueToArrayConverter x:Key="MultiValueToArrayConverter" />
	<cv:NewlineStringConverter x:Key="NewlineStringConverter" />
	<cv:ObjectColorConverter x:Key="ObjectColorConverter" />
	<cv:ParamsToOpenFileBrowserParamsConverter x:Key="ParamsToOpenFileBrowserParamsConverter" />
	<cv:SettingsAttributeConverter x:Key="SettingsAttributeConverter" />
	<cv:SettingsAttributeValueControlConverter x:Key="SettingsAttributeValueControlConverter" />
	<cv:StringToBoolConverter x:Key="StringToBoolConverter" />
	<cv:StringToCachedImageConverter x:Key="StringToCachedImageConverter" />
	<cv:StringToCachedImageFallbackConverter x:Key="StringToCachedImageFallbackConverter" />
	<cv:StringToFilterConverter x:Key="StringToFilterConverter" />
	<cv:StringToFilterListConverter x:Key="StringToFilterListConverter" />
	<cv:TextWrapToScrollBarVisibilityConverter x:Key="TextWrapToScrollBarVisibilityConverter" />
	<cv:VisibleLogsConverter x:Key="VisibleLogsConverter" />
	<cv:FormatterToFormatterDataConverter x:Key="FormatterToFormatterDataConverter" />
	<cv:MarkdownToFlowDocumentConverter x:Key="MarkdownToFlowDocumentConverter" />
	<cv:HtmlToFlowDocumentConverter x:Key="HtmlToFlowDocumentConverter" />

	<Style TargetType="{x:Type c:TemplateKeywordControl}" />
	<Style TargetType="{x:Type ListViewItem}" />

	<Style x:Key="VerticalSeparator" TargetType="Rectangle">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Width" Value="1" />
		<Setter Property="Margin" Value="2,2,4,2" />
		<Setter Property="Fill" Value="Gray" />
	</Style>

	<ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type c:ImageButton}">
		<Grid x:Name="ParentGrid">
			<Image
				x:Name="ButtonImageControl"
				Width="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				Height="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				RenderOptions.BitmapScalingMode="NearestNeighbor"
				Source="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToCachedImageConverter}}"
				Stretch="UniformToFill"
				ToolTipService.ShowOnDisabled="True" />
			<Rectangle
				x:Name="TintRect"
				Width="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				Height="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				Opacity="0.75"
				ToolTip="{Binding Path=ToolTip, ElementName=ButtonImageControl}"
				ToolTipService.ShowOnDisabled="True">
				<Rectangle.Fill>
					<SolidColorBrush Color="Transparent" />
				</Rectangle.Fill>
				<Rectangle.OpacityMask>
					<ImageBrush ImageSource="{Binding Path=Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToCachedImageConverter}, TargetNullValue={x:Null}, FallbackValue={x:Null}}" />
				</Rectangle.OpacityMask>
			</Rectangle>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="True">
				<Setter TargetName="ButtonImageControl" Property="ToolTip">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource BindingFallbackConverter}">
							<Binding Path="ToolTip_Enabled" RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding Path="ToolTip" RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="ButtonImageControl" Property="ToolTip">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource BindingFallbackConverter}">
							<Binding Path="ToolTip_Disabled" RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding Path="ToolTip" RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
				<Setter TargetName="ButtonImageControl" Property="Source">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource StringToCachedImageFallbackConverter}">
							<Binding Path="Source_Disabled" RelativeSource="{RelativeSource TemplatedParent}" />
							<Binding Path="Source" RelativeSource="{RelativeSource TemplatedParent}" />
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="IsEnabled" Value="True" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="TintRect" Property="Fill" Value="{Binding TintColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToBrushConverter}}" />
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHovered" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="TintRect" Property="Fill">
						<Setter.Value>
							<SolidColorBrush Opacity="0.48" Color="WhiteSmoke" />
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHovered" Value="False" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="TintRect" Property="Fill">
						<Setter.Value>
							<SolidColorBrush Opacity="0.50" Color="Gray" />
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--  Default Style for Image Button  -->
	<Style TargetType="{x:Type c:ImageButton}">
		<Setter Property="Template" Value="{StaticResource ImageButtonTemplate}" />
		<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
		<Setter Property="MaxSize" Value="16" />
	</Style>
	<Style x:Key="DefaultImageButtonStyle" TargetType="{x:Type c:ImageButton}">
		<Setter Property="Template" Value="{StaticResource ImageButtonTemplate}" />
		<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
		<Setter Property="MaxSize" Value="16" />
	</Style>

	<!--  Style to hide tool tips that have an empty content.  -->
	<Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="ToolTip">
		<Style.Triggers>
			<Trigger Property="Content" Value="{x:Static sys:String.Empty}">
				<Setter Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Content" Value="{x:Null}">
				<Setter Property="Visibility" Value="Collapsed" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--  TabItem Style for Templates  -->

	<!--  Button style  -->
	<Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="Chrome"
						Margin="0"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						SnapsToDevicePixels="True">
						<ContentPresenter
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontFamily" Value="Webdings" />
		<Setter Property="FontSize" Value="13.333" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Margin" Value="0,2,3,0" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="Gray" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="GadgetStyle" TargetType="{x:Type window:UnclosableWindow}">
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome
					CaptionHeight="36"
					GlassFrameThickness="-1"
					ResizeBorderThickness="4" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type window:UnclosableWindow}">
					<Grid>
						<!--  This is the ContentPresenter that displays the window content.  -->
						<Border Margin="0,40,0,25">
							<ContentPresenter Content="{TemplateBinding Content}" />
						</Border>
						<!--  This is the transparent white rectangle that goes behind the window content.  -->
						<Border
							Margin="1,40,1,25"
							BorderBrush="Gray"
							BorderThickness="0,1,0,1"
							Grid.ZIndex="-1">
							<Rectangle Fill="White" Opacity="0.5" />
						</Border>
						<!--  Window Border Content  -->
						<!--  System Button  -->
						<Button
							Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}"
							Padding="1"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							shell:WindowChrome.IsHitTestVisibleInChrome="True"
							Content="Test"
							Style="{StaticResource WindowButtonStyle}" />
						<!--  Window Title  -->
						<TextBlock
							Padding="0,0,0,8"
							VerticalAlignment="Bottom"
							Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"
							TextAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CustomWindowStyle" TargetType="{x:Type window:UnclosableWindow}">
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Silver" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type window:UnclosableWindow}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Rectangle
									x:Name="moveRectangle"
									Grid.Row="0"
									Grid.Column="0"
									Fill="{TemplateBinding Background}" />
								<StackPanel
									Grid.Row="0"
									Grid.Column="1"
									Background="{TemplateBinding Background}"
									Orientation="Horizontal">
									<Button
										x:Name="minimizeButton"
										Content="0"
										Style="{StaticResource WindowButtonStyle}" />
									<Button
										x:Name="restoreButton"
										Content="1"
										Style="{StaticResource WindowButtonStyle}" />
									<Button
										x:Name="closeButton"
										Content="r"
										Style="{StaticResource WindowButtonStyle}" />
								</StackPanel>
								<Grid
									Grid.Row="1"
									Grid.ColumnSpan="2"
									Margin="5,5,5,5"
									Background="{TemplateBinding Background}">
									<AdornerDecorator>
										<ContentPresenter />
									</AdornerDecorator>
								</Grid>
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  Top Menu  -->
	<c:MenuItemContainerTemplateSelector x:Key="MenuItemContainerTemplateSelector" />

	<HierarchicalDataTemplate DataType="{x:Type data:MenuData}" ItemsSource="{Binding MenuItems}">
		<!--<TextBlock Text="{Binding Header, FallbackValue='Null'}"/>-->
		<MenuItem
			Command="{Binding ClickCommand}"
			Header="{Binding Header}"
			InputGestureText="{Binding ShortcutText}"
			IsEnabled="{Binding IsEnabled}"
			ItemContainerTemplateSelector="{StaticResource MenuItemContainerTemplateSelector}"
			UsesItemContainerTemplate="True" />
	</HierarchicalDataTemplate>

	<DataTemplate DataType="{x:Type data:SeparatorData}">
		<Separator />
	</DataTemplate>
	<Style TargetType="{x:Type c:CrossButton}">
		<!--  Brushes we use for the control.  -->
		<Style.Resources>
			<SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
			<SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />
			<SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
			<SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />
			<SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
			<SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
			<SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />
		</Style.Resources>
		<!--  Simple properties that we set.  -->
		<Setter Property="SnapsToDevicePixels" Value="false" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Focusable" Value="False" />
		<!--  The control template.  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Background="Transparent">
						<!--  The background of the button, as an ellipse.  -->
						<Ellipse x:Name="backgroundEllipse" />
						<!--  A path that renders a cross.  -->
						<Path
							x:Name="ButtonPath"
							Margin="3"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Stretch="Uniform"
							Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
							StrokeEndLineCap="Square"
							StrokeStartLineCap="Square"
							StrokeThickness="1.5">
							<Path.Data>
								<PathGeometry>
									<PathGeometry.Figures>
										<PathFigure StartPoint="0,0">
											<LineSegment Point="25,25" />
										</PathFigure>
										<PathFigure StartPoint="0,25">
											<LineSegment Point="25,0" />
										</PathFigure>
									</PathGeometry.Figures>
								</PathGeometry>
							</Path.Data>
						</Path>
					</Grid>
					<!--  The triggers.  -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="backgroundEllipse" Property="Fill" Value="{StaticResource TabItemCloseButtonHoverBackgroundBrush}" />
							<Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource TabItemCloseButtonHoverForegroundBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="backgroundEllipse" Property="Fill" Value="{StaticResource TabItemCloseButtonPressedBackgroundBrush}" />
							<Setter TargetName="backgroundEllipse" Property="Stroke" Value="{StaticResource TabItemCloseButtonPressedBorderBrush}" />
							<Setter TargetName="ButtonPath" Property="Stroke" Value="{StaticResource TabItemCloseButtonPressedForegroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>