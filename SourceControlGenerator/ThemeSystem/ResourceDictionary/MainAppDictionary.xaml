<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework" 
					xmlns:main="clr-namespace:SCG"
					xmlns:c="clr-namespace:SCG.Controls"
					xmlns:core="clr-namespace:SCG.Core"
					xmlns:cv="clr-namespace:SCG.Converters"
					xmlns:proxy="clr-namespace:SCG.Data.Proxy"
					xmlns:data="clr-namespace:SCG.Data.View"
					xmlns:theme="clr-namespace:SCG.ThemeSystem"
					xmlns:window="clr-namespace:SCG.Windows"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
					mc:Ignorable="d"
					x:Name="MainAppDictionary"
					
					>
	<proxy:AppControllerProxy x:Key="AppControllerProxy" Data="{x:Static core:AppController.Main}"/>

	<BooleanToVisibilityConverter  x:Key="BoolToVisibilityConverter"/>
	<cv:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
	<cv:EmptyListVisibilityConverter x:Key="EmptyListVisibilityConverter"/>
	<cv:EmptyStringVisibilityConverter x:Key="EmptyStringVisibilityConverter"/>
	<cv:EmptyValueVisibilityConverter x:Key="EmptyValueVisibilityConverter"/>
	<cv:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
	<cv:FooterOutputColorConverter x:Key="FooterOutputColorConverter"/>
	<cv:ListViewStarWidthConverter x:Key="ListViewStarWidthConverter"/>
	<cv:ObjectColorConverter x:Key="ObjectColorConverter"/>
	<cv:NewlineStringConverter x:Key="NewlineStringConverter"/>
	<cv:SettingsAttributeConverter x:Key="SettingsAttributeConverter"/>
	<cv:SettingsAttributeValueControlConverter x:Key="SettingsAttributeValueControlConverter"/>
	<cv:StringToBoolConverter x:Key="StringToBoolConverter" />
	<cv:StringToFilterConverter x:Key="StringToFilterConverter" />
	<cv:StringToFilterListConverter x:Key="StringToFilterListConverter" />
	<cv:TextWrapToScrollBarVisibilityConverter x:Key="TextWrapToScrollBarVisibilityConverter" />
	<cv:IntToGridLengthConverter x:Key="IntToGridLengthConverter"/>
	<cv:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
	<cv:VisibleLogsConverter x:Key="VisibleLogsConverter"/>
	<cv:LogTypeColorConverter x:Key="LogTypeColorConverter"/>
	<cv:StringToCachedImageConverter x:Key="StringToCachedImageConverter"/>
	<cv:GrayscaleTintImageConverter x:Key="GrayscaleTintImageConverter"/>
	<cv:BindingFallbackConverter x:Key="BindingFallbackConverter"/>
	<cv:MultiValueToArrayConverter x:Key="MultiValueToArrayConverter"/>
	<cv:ParamsToOpenFileBrowserParamsConverter x:Key="ParamsToOpenFileBrowserParamsConverter"/>

	<Style TargetType="{x:Type c:TemplateKeywordControl}"/>
	<Style TargetType="{x:Type ListViewItem}" />

	<Style x:Key="VerticalSeparator" TargetType="Rectangle">
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Width" Value="1" />
		<Setter Property="Margin" Value="2,2,4,2" />
		<Setter Property="Stroke" Value="Gray" />
	</Style>

	<ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type c:ImageButton}">
		<Grid>
			<Image
				x:Name="ButtonImageControl"
				Height="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				Width="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				Source="{Binding Source, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToCachedImageConverter}, FallbackValue={x:Null}}"
				ToolTipService.ShowOnDisabled="True" 
			/>
			<Rectangle x:Name="TintRect"
				Width="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding MaxSize, RelativeSource={RelativeSource TemplatedParent}}"
				ToolTipService.ShowOnDisabled="True" ToolTip="{Binding Path=ToolTip, ElementName=ButtonImageControl}"
					   >
				<Rectangle.Fill>
					<SolidColorBrush Color="Transparent" />
				</Rectangle.Fill>
				<Rectangle.OpacityMask>
					<ImageBrush ImageSource="{Binding Source, RelativeSource={RelativeSource TemplatedParent}}"/>
				</Rectangle.OpacityMask>
			</Rectangle>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="True">
				<Setter TargetName="ButtonImageControl" Property="ToolTip">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource BindingFallbackConverter}">
							<Binding Path="ToolTip_Enabled" RelativeSource="{RelativeSource TemplatedParent}"/>
							<Binding Path="ToolTip" RelativeSource="{RelativeSource TemplatedParent}"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="ButtonImageControl" Property="ToolTip">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource BindingFallbackConverter}">
							<Binding Path="ToolTip_Disabled" RelativeSource="{RelativeSource TemplatedParent}"/>
							<Binding Path="ToolTip" RelativeSource="{RelativeSource TemplatedParent}"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="IsEnabled" Value="True" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="TintRect" Property="Fill">
						<Setter.Value>
							<SolidColorBrush Color="{Binding TintColor, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.5"/>
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="TintRect" Property="Fill">
						<Setter.Value>
							<SolidColorBrush Color="Black" Opacity="0.10"/>
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="False" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="TintRect" Property="Fill">
						<Setter.Value>
							<SolidColorBrush Color="Gray" Opacity="0.25"/>
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- Default Style for Image Button -->
	<Style TargetType="{x:Type c:ImageButton}" BasedOn="{x:Null}">
		<Setter Property="Template" Value="{StaticResource ImageButtonTemplate}" />
		<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
	</Style>

	<!-- Style to hide tool tips that have an empty content. -->
	<Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
		<Style.Triggers>
			<Trigger Property="Content"
				 Value="{x:Static sys:String.Empty}">
				<Setter Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger Property="Content"
				 Value="{x:Null}">
				<Setter Property="Visibility"
					Value="Collapsed" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- TabItem Style for Templates -->
	
	<!--  Button style -->
	<Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border
							x:Name="Chrome"
							BorderBrush="{TemplateBinding BorderBrush}"
							Margin="0"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="True">
						<ContentPresenter
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Content="{TemplateBinding Content}"
								ContentStringFormat="{TemplateBinding ContentStringFormat}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FontFamily" Value="Webdings"/>
		<Setter Property="FontSize" Value="13.333" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Margin" Value="0,2,3,0"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="Gray" />
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="GadgetStyle" TargetType="{x:Type window:UnclosableWindow}">
		<Setter Property="shell:WindowChrome.WindowChrome">
			<Setter.Value>
				<shell:WindowChrome GlassFrameThickness="-1" 
							ResizeBorderThickness="4"
							CaptionHeight="36"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type window:UnclosableWindow}">
					<Grid>
						<!-- This is the ContentPresenter that displays the window content. -->
						<Border Margin="0,40,0,25" >
							<ContentPresenter Content="{TemplateBinding Content}"/>
						</Border>
						<!--This is the transparent white rectangle that goes behind the window content.-->
						<Border Margin="1,40,1,25" BorderBrush="Gray" BorderThickness="0,1,0,1" Grid.ZIndex="-1">
							<Rectangle Fill="White" Opacity="0.5" />
						</Border>
						<!-- Window Border Content -->
						<!-- System Button -->
						<Button Content="Test" Style="{StaticResource WindowButtonStyle}"
								VerticalAlignment="Top" HorizontalAlignment="Left" Padding="1"
								Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}" 
								shell:WindowChrome.IsHitTestVisibleInChrome="True"
								
								
								/>
						<!-- Window Title -->
						<TextBlock VerticalAlignment="Bottom" TextAlignment="Center" 
					   Padding="0,0,0,8" 
					   Text="{Binding RelativeSource=
									 {RelativeSource TemplatedParent}, Path=Title}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type window:UnclosableWindow}" x:Key="CustomWindowStyle">
		<Setter Property="WindowStyle" Value="None"/>
		<Setter Property="ResizeMode" Value="NoResize"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="Silver"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type window:UnclosableWindow}">
					<Border BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="moveRectangle" Fill="{TemplateBinding Background}"
										   Grid.Row="0" Grid.Column="0"/>
								<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Background="{TemplateBinding Background}">
									<Button x:Name="minimizeButton" Style="{StaticResource WindowButtonStyle}"
											Content="0" />
									<Button x:Name="restoreButton" Style="{StaticResource WindowButtonStyle}"
											Content="1" />
									<Button x:Name="closeButton" Style="{StaticResource WindowButtonStyle}"
											Content="r" />
								</StackPanel>
								<Grid Background="{TemplateBinding Background}"
										   Grid.Row="1" Grid.ColumnSpan="2" Margin="5,5,5,5">
									<AdornerDecorator>
										<ContentPresenter/>
									</AdornerDecorator>
								</Grid>
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Top Menu -->
	<c:MenuItemContainerTemplateSelector x:Key="MenuItemContainerTemplateSelector" />

	<HierarchicalDataTemplate DataType="{x:Type data:MenuData}" ItemsSource="{Binding MenuItems}" >
		<!--<TextBlock Text="{Binding Header, FallbackValue='Null'}"/>-->
		<MenuItem Header="{Binding Header}" Command="{Binding ClickCommand}" InputGestureText="{Binding ShortcutText}" IsEnabled="{Binding IsEnabled}" UsesItemContainerTemplate="True" ItemContainerTemplateSelector="{StaticResource MenuItemContainerTemplateSelector}" />
	</HierarchicalDataTemplate>
	<DataTemplate DataType="{x:Type data:SeparatorData}">
		<Separator />
	</DataTemplate>

	<Style TargetType="{x:Type c:CrossButton}">

		<!-- Brushes we use for the control. -->
		<Style.Resources>
			<SolidColorBrush x:Key="TabItemCloseButtonNormalBackgroundBrush" Color="#00000000" />
			<SolidColorBrush x:Key="TabItemCloseButtonNormalBorderBrush" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="TabItemCloseButtonNormalForegroundBrush" Color="#FF8f949b" />

			<SolidColorBrush x:Key="TabItemCloseButtonHoverBackgroundBrush" Color="#FFc13535" />
			<SolidColorBrush x:Key="TabItemCloseButtonHoverForegroundBrush" Color="#FFf9ebeb" />

			<SolidColorBrush x:Key="TabItemCloseButtonPressedBackgroundBrush" Color="#FF431e20" />
			<SolidColorBrush x:Key="TabItemCloseButtonPressedBorderBrush" Color="#FF110033" />
			<SolidColorBrush x:Key="TabItemCloseButtonPressedForegroundBrush" Color="#FFf9ebeb" />
		</Style.Resources>

		<!-- Simple properties that we set. -->
		<Setter Property="SnapsToDevicePixels" Value="false" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Focusable" Value="False" />

		<!-- The control template. -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Background="Transparent">

						<!-- The background of the button, as an ellipse. -->
						<Ellipse x:Name="backgroundEllipse" />

						<!-- A path that renders a cross. -->
						<Path x:Name="ButtonPath"
							  Margin="3"
							  Stroke="{StaticResource TabItemCloseButtonNormalForegroundBrush}"
							  StrokeThickness="1.5"
							  StrokeStartLineCap="Square"
							  StrokeEndLineCap="Square"
							  Stretch="Uniform"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center">
							<Path.Data>
								<PathGeometry>
									<PathGeometry.Figures>
										<PathFigure StartPoint="0,0">
											<LineSegment Point="25,25"/>
										</PathFigure>
										<PathFigure StartPoint="0,25">
											<LineSegment Point="25,0"/>
										</PathFigure>
									</PathGeometry.Figures>
								</PathGeometry>
							</Path.Data>
						</Path>
					</Grid>

					<!-- The triggers. -->
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="backgroundEllipse" Property="Fill"
									Value="{StaticResource TabItemCloseButtonHoverBackgroundBrush}" />
							<Setter TargetName="ButtonPath" Property="Stroke" 
									Value="{StaticResource TabItemCloseButtonHoverForegroundBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="backgroundEllipse" Property="Fill"
									Value="{StaticResource TabItemCloseButtonPressedBackgroundBrush}" />
							<Setter TargetName="backgroundEllipse" Property="Stroke"
									Value="{StaticResource TabItemCloseButtonPressedBorderBrush}" />
							<Setter TargetName="ButtonPath" Property="Stroke" 
									Value="{StaticResource TabItemCloseButtonPressedForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>