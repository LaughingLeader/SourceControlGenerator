<Window x:Name="MainAppWindow" x:Class="LL.SCG.Windows.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:LL.SCG"
		xmlns:c="clr-namespace:LL.SCG.Controls"
		xmlns:cv="clr-namespace:LL.SCG.Converters"
		xmlns:fc="clr-namespace:LL.SCG.Commands"
		xmlns:core="clr-namespace:LL.SCG.Core"
		xmlns:vdata="clr-namespace:LL.SCG.Data.View"
		mc:Ignorable="d"
		Title="DOS2 Source Control Helper" Height="600" Width="1024" Loaded="Window_Loaded" Closing="MainAppWindow_Closing"
		WindowStartupLocation="CenterOwner"
		>
	<Window.Resources>
		<cv:EmptyListVisibilityConverter x:Key="EmptyListVisibilityConverter"/>
		<cv:FooterOutputColorConverter x:Key="FooterOutputColorConverter"/>
		<cv:SettingsAttributeConverter x:Key="SettingsAttributeConverter"/>
		<BooleanToVisibilityConverter  x:Key="BoolToVisibilityConverter"/>
		<CollectionViewSource x:Key="ActiveProjectsViewSource" CollectionViewType="ListCollectionView"/>
		<CollectionViewSource x:Key="ManagedProjectsViewSource" CollectionViewType="ListCollectionView"/>
		<DataTemplate x:Key="AlternatingKeywordsTemplate" DataType="c:TemplateKeywordControl">
			<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
									  KeywordValue="{Binding KeywordValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		</DataTemplate>
		<SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
		<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
		<SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
		<SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
		<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
		<SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
		<SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
		<SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
		<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
		<SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
		<SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
		<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
		<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.RowDefinitions>
									<RowDefinition Height="19"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="-90"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="180"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.RowDefinitions>
									<RowDefinition Height="19"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="90"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderHeaderFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Border>
							<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid Background="Transparent" SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="19"/>
								</Grid.ColumnDefinitions>
								<Ellipse x:Name="circle" Grid.Column="2" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
								<Path x:Name="arrow" Grid.Column="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
								<ContentPresenter Grid.Column="0" HorizontalAlignment="Left" Margin="2,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
								<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
								<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderRightButton" TargetType="{x:Type Expander}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Expander}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
							<DockPanel>
								<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</DockPanel>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="true">
								<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Right">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Up">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Left">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Grid Width="Auto" Height="Auto">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<DockPanel Grid.Row="0">
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="File">
					<MenuItem Header="Refresh Available Projects" />
					<MenuItem Header="Backup All Projects" />
					<MenuItem Header="Backup All Projects To..." />
					<MenuItem Header="Create Template..." Click="Button_NewTemplate_Click" />
				</MenuItem>
				<MenuItem Header="Options">
					<MenuItem x:Name="LogWindowToggle" Header="{Binding LogVisibleText, ElementName=MainAppWindow}" Click="LogWindowToggle_Click" />
					<MenuItem Header="Save Log..." />
				</MenuItem>
				<MenuItem Header="Help">
					<MenuItem Header="About" />
					<MenuItem Header="Report Bug / Feedback..." />
					<MenuItem Header="Github Source..." />
				</MenuItem>
			</Menu>
		</DockPanel>
		<TabControl x:Name="MainTabsControl" Grid.Row="1" SelectionChanged="PreventInitialTextboxFocus" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Padding="0"
			Visibility="{Binding ModuleIsLoaded, Converter={StaticResource BoolToVisibilityConverter}}" 

			>
			<TabControl.Resources>
				<Style TargetType="TabItem">
					<Setter Property="DataContext" Value="{Binding CurrentModuleData}" />
				</Style>
			</TabControl.Resources>
			<TabItem Header="Projects" x:Name="ProjectsTab" >
				<Grid x:Name="ProjectsViewGrid">
					
				</Grid>
			</TabItem>
			<TabItem Header="Templates">
				<Grid>
					<c:AddTemplateControl x:Name="NewTemplateControl" Grid.ZIndex="1" DataContext="{Binding}" Visibility="{Binding AddTemplateControlVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" TemplateData="{Binding NewTemplateData}" ConfirmCommand="{Binding AddTemplateCommand}" CancelCommand="{Binding CancelTemplateCommand}" />
					<TabControl  Grid.ZIndex="0" TabStripPlacement="Left" Padding="0,5,0,0" >
						<TabControl.Template>
							<ControlTemplate TargetType="TabControl">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<ScrollViewer VerticalScrollBarVisibility="Auto" >
										<TabPanel x:Name="HeaderPanel"
											  Panel.ZIndex ="1" 
											  KeyboardNavigation.TabIndex="1"
											  Grid.Column="0"
											  Grid.Row="0"
											  Margin="2,2,2,0"
											  IsItemsHost="true"/>
									</ScrollViewer>
									<ContentPresenter x:Name="PART_SelectedContentHost"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  Margin="{TemplateBinding Padding}"
										  ContentSource="SelectedContent" Grid.Column="1"/>
								</Grid>
							</ControlTemplate>
						</TabControl.Template>
						<TabControl.Resources>
							<CollectionViewSource x:Key="TemplateTabs" Source="{Binding Templates}"/>
							<DataTemplate DataType="{x:Type vdata:TemplateEditorData}">
								<c:TemplateEditorControl DataContext="{Binding}" TemplateData="{Binding}" />
							</DataTemplate>
							<Style TargetType="{x:Type TabItem}">
								<Setter Property="Header" Value="{Binding Path=Name}" />
							</Style>
							<Style TargetType="{x:Type c:TemplateEditorControl}">
							
							</Style>
						</TabControl.Resources>
						<TabControl.ItemsSource>
							<CompositeCollection>
								<CollectionContainer Collection="{Binding Source={StaticResource TemplateTabs}}" />
							</CompositeCollection>
						</TabControl.ItemsSource>
					</TabControl>
				</Grid>
			</TabItem>
			<TabItem x:Name="KeywordsTab" Header="Keywords">
				<TabItem.Resources>
					<Style x:Key="KeywordBorderStyle" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.ControlLightColor}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.MenuColor}" />
							</Setter.Value>
						</Setter>
					</Style>
					<Style x:Key="KeywordBorderStyleMouseOver" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.ControlLightColor}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{x:Static SystemColors.MenuColor}" />
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{x:Static SystemColors.ControlLightLightColor}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</TabItem.Resources>
				<Grid >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Width="Auto" Height="Auto" x:Name="KeywordsHeaderControls" Margin="5" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Label x:Name="TemplateLabel" Content="Template Keywords" Grid.Column="0" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{x:Static vdata:TooltipText.TemplateKeywords}" Padding="2,0,50,0">
							<Label.Style>
								<Style TargetType="Label">
									<Setter Property="Foreground" Value="Black" />
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Foreground" Value="#FF3A6FFF" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<StackPanel Grid.Column="1" HorizontalAlignment="Right" x:Name="KeywordCommandsGrid" Orientation="Horizontal" >
							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
								</Style>
							</StackPanel.Resources>
							<c:FileBrowseControl OpenFileText="Select Keywords File" FileLocationText="{Binding Settings.UserKeywordsFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												OnOpen="{Binding LoadKeywords}"/>
							<Button x:Name="SaveKeywordsButton" Content="Save" Click="SaveKeywordsButton_Click" />
							<Button x:Name="SaveAsKeywordsButton" Content="Save As..." Click="SaveAsKeywordsButton_Click" />
							<Button Content="Default..." Click="KeywordsList_Default_Click" ToolTip="Reset Keywords to Default" />
						</StackPanel>
					</Grid>
					<ScrollViewer Grid.Row="1" x:Name="KeywordListScrollViewer" Margin="10,0,10,0" VerticalScrollBarVisibility="Auto" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" >
						<Grid x:Name="KeywordListGrid" Margin="10">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
								<Grid x:Name="DefaultKeywords" >
									<Grid.Resources>
										<Style TargetType="c:TemplateKeywordControl">
											<Setter Property="KeywordNameReadOnly" Value="True"/>
											<Setter Property="KeywordValueReadOnly" Value="True"/>
										</Style>
									</Grid.Resources>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="*" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}" >
										<TextBlock Text="Application Keywords (Auto-Assigned)" Margin="2" Padding="2" FontFamily="Neuton" />
									</Border>
									<ItemsControl Grid.Row="1" x:Name="AppKeywordsList" ItemsSource="{Binding KeyList}" >
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="c:TemplateKeywordControl">
												<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName}" KeywordValue="{Binding KeywordValue}" KeywordNameReadOnly="True" KeywordValueReadOnly="True" />
											</DataTemplate>
										</ItemsControl.ItemTemplate>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Vertical" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
									<Border Grid.Row="2" Style="{StaticResource KeywordBorderStyleMouseOver}" >
										<Expander x:Name="DateKeywordsExpander"  Header="Date Keywords" Style="{DynamicResource ExpanderRightButton}" Background="{x:Null}" FontFamily="Neuton" >
											<ScrollViewer FlowDirection="LeftToRight" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" MaxHeight="125">
												<ItemsControl DataContext="{Binding Controller.Data, ElementName=MainAppWindow}" ItemsSource="{Binding DateKeyList}" >
													<ItemsControl.ItemTemplate>
														<DataTemplate DataType="c:TemplateKeywordControl">
															<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName}" KeywordValue="{Binding KeywordValue}" KeywordNameReadOnly="True" KeywordValueReadOnly="True" />
														</DataTemplate>
													</ItemsControl.ItemTemplate>
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Vertical" />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
												</ItemsControl>
											</ScrollViewer>
										</Expander>
									</Border>
								</Grid>
							</ScrollViewer>
							<Grid x:Name="ParentGrid_UserKeywords" Grid.Row="1" >
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}" >
									<TextBlock Text="User Keywords" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" Margin="2" Padding="2" FontFamily="Neuton" />
								</Border>
								<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
									<StackPanel Orientation="Vertical" DataContext="{Binding UserKeywords}">
										<c:TemplateKeywordControl KeywordName="$DateCustom" KeywordValue="{Binding DateCustom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeywordNameReadOnly="True" KeywordValueReadOnly="False" FontFamily="Neuton"  />
										<ItemsControl x:Name="UserKeywords" ItemsSource="{Binding Keywords}" ItemTemplate="{StaticResource AlternatingKeywordsTemplate}" AlternationCount="2" >
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Vertical" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>
								</ScrollViewer>
							</Grid>
						</Grid>
					</ScrollViewer>
					<Grid Grid.Row="2" x:Name="KeywordsFooterControls">
						<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
									<Setter Property="Width" Value="55" />
								</Style>
							</StackPanel.Resources>
							<Button Content="Add" Click="KeywordsList_Add_Click" ToolTip="Add New Keyword"/>
							<Button Content="Remove" Click="KeywordsList_Remove_Click" ToolTip="Remove Last Keyword" />
						</StackPanel>
					</Grid>
				</Grid>
			</TabItem>
			<TabItem x:Name="Tab_Settings" Header="Settings">
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<DataGrid x:Name="SettingsDataGrid" ItemsSource="{Binding ModuleSettings, Converter={StaticResource SettingsAttributeConverter}}" AutoGenerateColumns="False" BorderBrush="{x:Null}" BorderThickness="0" >
						<DataGrid.Resources>
							<Style x:Key="ColumnElementStyle" TargetType="TextBlock">
								<Setter Property="Margin" Value="5,0,10,0" />
							</Style>
						</DataGrid.Resources>
						<DataGrid.Columns>
							<DataGridTextColumn Header="Setting Name" Binding="{Binding Name}" Width="Auto" ElementStyle="{StaticResource ColumnElementStyle}" />
							<DataGridTextColumn Header="Value" Binding="{Binding ViewType}" Width="Auto" ElementStyle="{StaticResource ColumnElementStyle}" />
						</DataGrid.Columns>
					</DataGrid>
				</ScrollViewer>
			</TabItem>
		</TabControl>
		<Grid x:Name="FooterGrid" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="105" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Border Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
			<Border Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />

			<TextBox Grid.Column="0" x:Name="FooterOuputTextboxDate" Text="{Binding Path=FooterOutputDate, ElementName=MainAppWindow}" IsReadOnly="True" Margin="0" BorderThickness="0" TextAlignment="Center" Background="{x:Null}" />
			<TextBox Grid.Column="1" x:Name="FooterOuputTextboxText" Text="{Binding Path=FooterOutputText, ElementName=MainAppWindow}" IsReadOnly="True" TextAlignment="Left" Foreground="{Binding Path=FooterOutputType, ElementName=MainAppWindow, Converter={StaticResource FooterOutputColorConverter}}" Margin="0" BorderThickness="0" Background="{x:Null}" Padding="4,0,0,0" />
		</Grid>
	</Grid>
</Window>
