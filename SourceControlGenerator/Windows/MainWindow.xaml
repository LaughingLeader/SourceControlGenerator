<windows:ClipboardMonitorWindow
	x:Class="SCG.Windows.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:SCG.Controls"
	xmlns:cb="clr-namespace:SCG.Controls.Behavior"
	xmlns:core="clr-namespace:SCG.Core"
	xmlns:cv="clr-namespace:SCG.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:fc="clr-namespace:SCG.Commands"
	xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
	xmlns:listview="clr-namespace:Itenso.Windows.Controls.ListViewLayout"
	xmlns:local="clr-namespace:SCG"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:proxy="clr-namespace:SCG.Data.Proxy"
	xmlns:theme="clr-namespace:SCG.ThemeSystem"
	xmlns:vdata="clr-namespace:SCG.Data.View"
	xmlns:windows="clr-namespace:SCG.Windows"
	x:Name="MainAppWindow"
	Title="{Binding WindowTitle}"
	Width="1024"
	Height="600"
	Closing="MainAppWindow_Closing"
	Loaded="MainAppWindow_Loaded"
	WindowStartupLocation="CenterOwner"
	mc:Ignorable="d">
	<Window.Resources>
		<CollectionViewSource x:Key="ActiveProjectsViewSource" CollectionViewType="ListCollectionView" />
		<CollectionViewSource x:Key="ManagedProjectsViewSource" CollectionViewType="ListCollectionView" />
		<DataTemplate x:Key="AlternatingKeywordsTemplate" DataType="c:TemplateKeywordControl">
			<c:TemplateKeywordControl
				DataContext="{Binding}"
				KeywordName="{Binding KeywordName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				KeywordValue="{Binding KeywordValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		</DataTemplate>

		<Style BasedOn="{StaticResource {x:Type TabControl}}" TargetType="TabControl">
			<EventSetter Event="SelectionChanged" Handler="Tab_ResetFocus" />
		</Style>
	</Window.Resources>
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo
			Description="{Binding ProgressMessage}"
			ProgressState="Normal"
			ProgressValue="{Binding ProgressValueTaskBar, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
	</Window.TaskbarItemInfo>
	<Grid Width="Auto" Height="Auto">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<DockPanel Grid.Row="0" Background="Transparent">
			<Menu
				MinHeight="10"
				Padding="0"
				Background="Transparent"
				DockPanel.Dock="Top"
				ItemContainerTemplateSelector="{StaticResource MenuItemContainerTemplateSelector}"
				ItemsSource="{Binding MenuBarData.Menus}"
				UsesItemContainerTemplate="True" />
		</DockPanel>
		<TabControl
			x:Name="MainTabsControl"
			Grid.Row="1"
			Padding="0"
			BorderThickness="0,1,0,0"
			SelectionChanged="PreventInitialTextboxFocus"
			Visibility="{Binding ModuleIsLoaded, Converter={StaticResource BoolToVisibilityConverter}}">
			<TabControl.Resources>
				<Style
					x:Key="MainTabStyle"
					BasedOn="{StaticResource {x:Type TabItem}}"
					TargetType="TabItem">
					<Setter Property="DataContext" Value="{Binding CurrentModuleData}" />
				</Style>
			</TabControl.Resources>
			<TabItem x:Name="ProjectsTab" Header="Projects">
				<Grid x:Name="ProjectsViewGrid" />
			</TabItem>
			<TabItem Header="Template Editor" Style="{StaticResource MainTabStyle}">
				<Grid>
					<c:AddTemplateControl
						x:Name="NewTemplateControl"
						CancelCommand="{Binding CancelTemplateCommand}"
						ConfirmCommand="{Binding AddTemplateCommand}"
						DataContext="{Binding}"
						Grid.ZIndex="1"
						TemplateData="{Binding NewTemplateData}"
						Visibility="{Binding AddTemplateControlVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" />
					<TabControl
						Margin="2,0"
						Grid.ZIndex="0"
						TabStripPlacement="Right">
						<TabControl.Template>
							<ControlTemplate TargetType="TabControl">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid Grid.Column="1" Margin="4">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<TextBlock Text="Templates:" TextAlignment="Center" />
										<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
											<ScrollViewer.Resources>
												<Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="{x:Type TabItem}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="TabItem">
																<Border
																	Name="Border"
																	Margin="0"
																	BorderBrush="Black"
																	BorderThickness="1"
																	CornerRadius="4">
																	<ContentPresenter
																		x:Name="ContentSite"
																		Margin="10,2"
																		HorizontalAlignment="Center"
																		VerticalAlignment="Center"
																		ContentSource="Header" />
																</Border>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsSelected" Value="True">
																		<Setter TargetName="Border" Property="Background">
																			<Setter.Value>
																				<SolidColorBrush Color="#FFC6DDFF" />
																			</Setter.Value>
																		</Setter>
																	</Trigger>
																	<Trigger Property="IsSelected" Value="False">
																		<Setter TargetName="Border" Property="Background">
																			<Setter.Value>
																				<SolidColorBrush Color="#FF999fc2" />
																			</Setter.Value>
																		</Setter>
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>

												</Style>
											</ScrollViewer.Resources>
											<TabPanel
												x:Name="HeaderPanel"
												Grid.Row="0"
												Grid.Column="0"
												Margin="2,2,2,0"
												Panel.ZIndex="1"
												IsItemsHost="true"
												KeyboardNavigation.TabIndex="1" />
										</ScrollViewer>
									</Grid>
									<ContentPresenter
										x:Name="PART_SelectedContentHost"
										Grid.Column="0"
										Margin="{TemplateBinding Padding}"
										ContentSource="SelectedContent"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Grid>
							</ControlTemplate>
						</TabControl.Template>
						<TabControl.Resources>
							<CollectionViewSource x:Key="TemplateTabs" Source="{Binding Templates}" />
							<DataTemplate DataType="{x:Type vdata:TemplateEditorData}">
								<c:TemplateEditorControl DataContext="{Binding}" TemplateData="{Binding}" />
							</DataTemplate>
							<Style TargetType="{x:Type TabItem}">
								<Setter Property="Header" Value="{Binding Path=Name}" />
								<EventSetter Event="GotFocus" Handler="Tab_ResetFocus" />
							</Style>
						</TabControl.Resources>
						<TabControl.ItemsSource>
							<CompositeCollection>
								<CollectionContainer Collection="{Binding Source={StaticResource TemplateTabs}}" />
							</CompositeCollection>
						</TabControl.ItemsSource>
					</TabControl>
				</Grid>
			</TabItem>
			<TabItem
				x:Name="KeywordsTab"
				Header="Keywords"
				Style="{StaticResource MainTabStyle}">
				<TabItem.InputBindings>
					<KeyBinding Command="{Binding DataContext.SaveKeywordsCommand, ElementName=MainAppWindow}" Gesture="CTRL+S" />
					<KeyBinding Command="{Binding DataContext.SaveKeywordsAsCommand, ElementName=MainAppWindow}" Gesture="CTRL+Alt+S" />
				</TabItem.InputBindings>
				<TabItem.Resources>
					<Style x:Key="KeywordBorderStyle" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='border;75'}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;10'}" />
							</Setter.Value>
						</Setter>
					</Style>
					<Style x:Key="KeywordBorderStyleMouseOver" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="BorderBrush">
							<Setter.Value>
								<!--<SolidColorBrush Color="{Binding Source={x:Static theme:ThemeController.TestBrush}, Converter={StaticResource ModifyBrushColorConverter}, ConverterParameter='1.2'}" />!-->
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='border;1'}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;10'}" />
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;25'}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</TabItem.Resources>
				<Grid Margin="10,0,10,0">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid
						x:Name="KeywordsHeaderControls"
						Grid.Row="0"
						Width="Auto"
						Height="Auto"
						Margin="0,4">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Label
							x:Name="TemplateLabel"
							Grid.Column="0"
							Width="Auto"
							Padding="2,0,50,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Content="Template Keywords"
							ToolTip="{x:Static core:TooltipText.TemplateKeywords}">
							<Label.Style>
								<Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Foreground" Value="#FF3A6FFF" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<c:FileBrowseControl
							x:Name="KeywordFileBrowser"
							Grid.Column="1"
							HorizontalAlignment="Stretch"
							FileLocationText="{Binding Settings.UserKeywordsFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							Filters="{x:Static core:CommonFileFilters.JsonList}"
							OnOpen="{Binding LoadKeywords}"
							OpenFileText="Select Keywords File" />
						<StackPanel
							x:Name="KeywordCommandsGrid"
							Grid.Column="2"
							Height="{Binding Path=Height, ElementName=KeywordFileBrowser}"
							HorizontalAlignment="Right"
							Orientation="Horizontal">
							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="Margin" Value="2,0,0,0" />
									<Setter Property="Padding" Value="4,2" />
									<Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, ElementName=KeywordFileBrowser, FallbackValue='#FFABADB3'}" />
								</Style>
							</StackPanel.Resources>
							<Button
								x:Name="SaveKeywordsButton"
								Command="{Binding DataContext.SaveKeywordsCommand, ElementName=MainAppWindow}"
								Content="Save" />
							<Button
								x:Name="SaveAsKeywordsButton"
								Command="{Binding DataContext.SaveKeywordsAsCommand, ElementName=MainAppWindow}"
								Content="Save As..." />
							<Button
								Click="KeywordsList_Default_Click"
								Content="Default..."
								ToolTip="Reset Keywords to Default" />
						</StackPanel>
					</Grid>
					<ScrollViewer
						x:Name="KeywordListScrollViewer"
						Grid.Row="1"
						Margin="0"
						Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
						VerticalScrollBarVisibility="Auto">
						<Grid x:Name="KeywordListGrid" Margin="10">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer
								Grid.Row="0"
								HorizontalScrollBarVisibility="Auto"
								VerticalScrollBarVisibility="Auto">
								<Grid x:Name="DefaultKeywords">
									<Grid.Resources>
										<Style BasedOn="{StaticResource {x:Type c:TemplateKeywordControl}}" TargetType="c:TemplateKeywordControl">
											<Setter Property="KeywordNameReadOnly" Value="True" />
											<Setter Property="KeywordValueReadOnly" Value="True" />
										</Style>
									</Grid.Resources>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="*" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}">
										<TextBlock
											Margin="2"
											Padding="2"
											FontFamily="Neuton"
											Text="Application Keywords (Auto-Assigned)" />
									</Border>
									<ItemsControl
										x:Name="AppKeywordsList"
										Grid.Row="1"
										ItemsSource="{Binding ViewModel.AppKeyList, ElementName=MainAppWindow}">
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="c:TemplateKeywordControl">
												<c:TemplateKeywordControl
													DataContext="{Binding}"
													KeywordName="{Binding KeywordName}"
													KeywordNameReadOnly="True"
													KeywordValue="{Binding KeywordValue}"
													KeywordValueReadOnly="True" />
											</DataTemplate>
										</ItemsControl.ItemTemplate>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Vertical" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
									<Border Grid.Row="2" Style="{StaticResource KeywordBorderStyleMouseOver}">
										<Expander
											x:Name="DateKeywordsExpander"
											Background="{x:Null}"
											FontFamily="Neuton"
											Header="Date Keywords"
											Style="{DynamicResource ExpanderRightButton}">
											<ScrollViewer
												MaxHeight="125"
												FlowDirection="LeftToRight"
												HorizontalScrollBarVisibility="Auto"
												VerticalScrollBarVisibility="Auto">
												<ItemsControl DataContext="{Binding ViewModel, ElementName=MainAppWindow}" ItemsSource="{Binding DateKeyList}">
													<ItemsControl.ItemTemplate>
														<DataTemplate DataType="c:TemplateKeywordControl">
															<c:TemplateKeywordControl
																DataContext="{Binding}"
																KeywordName="{Binding KeywordName}"
																KeywordNameReadOnly="True"
																KeywordValue="{Binding KeywordValue}"
																KeywordValueReadOnly="True" />
														</DataTemplate>
													</ItemsControl.ItemTemplate>
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Vertical" />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
												</ItemsControl>
											</ScrollViewer>
										</Expander>
									</Border>
								</Grid>
							</ScrollViewer>
							<Grid x:Name="ParentGrid_UserKeywords" Grid.Row="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}">
									<TextBlock
										Margin="2"
										Padding="2"
										Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}"
										FontFamily="Neuton"
										Text="User Keywords" />
								</Border>
								<ScrollViewer
									Grid.Row="1"
									HorizontalScrollBarVisibility="Auto"
									VerticalScrollBarVisibility="Auto">
									<StackPanel DataContext="{Binding UserKeywords}" Orientation="Vertical">
										<c:TemplateKeywordControl
											FontFamily="Neuton"
											KeywordName="$DateCustom"
											KeywordNameReadOnly="True"
											KeywordValue="{Binding DateCustom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											KeywordValueReadOnly="False" />
										<ItemsControl
											x:Name="UserKeywords"
											AlternationCount="2"
											ItemTemplate="{StaticResource AlternatingKeywordsTemplate}"
											ItemsSource="{Binding Keywords}">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Vertical" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>
								</ScrollViewer>
							</Grid>
						</Grid>
					</ScrollViewer>
					<Grid x:Name="KeywordsFooterControls" Grid.Row="2">
						<StackPanel
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Orientation="Horizontal">
							<Button
								Click="KeywordsList_Add_Click"
								Content="Add"
								ToolTip="Add New Keyword" />
							<Button
								Click="KeywordsList_Remove_Click"
								Content="Remove Last"
								ToolTip="Remove Last Keyword" />
						</StackPanel>
					</Grid>
				</Grid>

			</TabItem>
			<TabItem
				x:Name="Tab_Settings"
				BorderThickness="0"
				Header="Settings"
				Style="{StaticResource MainTabStyle}">
				<TabItem.Resources>
					<Style
						x:Key="SettingsListViewItemStyle"
						BasedOn="{StaticResource {x:Type ListViewItem}}"
						TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Style.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="{x:Null}" />
								<Setter Property="BorderBrush" Value="{x:Null}" />
							</Trigger>
						</Style.Triggers>
					</Style>
					<Style
						x:Key="Settings_ListViewHeaderStyle"
						BasedOn="{StaticResource {x:Type GridViewColumnHeader}}"
						TargetType="{x:Type GridViewColumnHeader}">
						<Setter Property="Visibility" Value="Collapsed" />
					</Style>
					<Style x:Key="SettingsContentControlStyle" TargetType="ContentControl">
						<Setter Property="HorizontalAlignment" Value="Stretch" />

						<Style.Triggers>
							<DataTrigger Binding="{Binding Converter={StaticResource SettingsAttributeValueControlConverter}}" Value="{x:Type c:FileBrowseControl}">
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<c:FileBrowseControl
												BrowseType="{Binding BrowseType, Mode=TwoWay}"
												FileLocationText="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
												OnOpen="{Binding OnOpened}"
												OpenFileText="{Binding OpenFileText}" />
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding Converter={StaticResource SettingsAttributeValueControlConverter}}" Value="{x:Type TextBox}">
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<TextBox Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>
						</Style.Triggers>
					</Style>
					<Style
						x:Key="SettingsHeaderStyle"
						BasedOn="{StaticResource {x:Type TextBlock}}"
						TargetType="TextBlock">
						<Setter Property="Margin" Value="10" />
						<Setter Property="FontSize" Value="16" />
						<Setter Property="FontFamily" Value="Arial" />
					</Style>
				</TabItem.Resources>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<ScrollViewer VerticalScrollBarVisibility="Auto">
						<StackPanel Orientation="Vertical">
							<TextBlock Style="{StaticResource SettingsHeaderStyle}" Text="{Binding ModuleName, FallbackValue='Module', StringFormat='\{0\} Settings'}" />
							<Separator />
							<ListView
								x:Name="ModuleSettingsListView"
								Padding="10,0,10,0"
								listview:ListViewLayoutManager.Enabled="True"
								AllowDrop="False"
								ItemContainerStyle="{StaticResource SettingsListViewItemStyle}"
								ItemsSource="{Binding ModuleSettings, Converter={StaticResource SettingsAttributeConverter}, UpdateSourceTrigger=PropertyChanged}">
								<ListView.View>
									<GridView ColumnHeaderContainerStyle="{StaticResource Settings_ListViewHeaderStyle}">
										<GridViewColumn
											listview:RangeColumn.MaxWidth="400"
											DisplayMemberBinding="{Binding Name}"
											Header="Settings Name" />
										<GridViewColumn
											Width="600"
											listview:RangeColumn.IsFillColumn="True"
											listview:RangeColumn.MinWidth="200"
											Header="Value">
											<GridViewColumn.CellTemplate>
												<DataTemplate DataType="{x:Type ListViewItem}">
													<!--  Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=ActualWidth}"  -->
													<ContentControl Content="{Binding}" Style="{StaticResource SettingsContentControlStyle}" />
												</DataTemplate>
											</GridViewColumn.CellTemplate>
										</GridViewColumn>
									</GridView>
								</ListView.View>
							</ListView>
							<Separator />
							<TextBlock Style="{StaticResource SettingsHeaderStyle}" Text="Source Control Generator Settings" />
							<Separator />
							<ListView
								x:Name="MainSettingsListView"
								Padding="10,0,10,0"
								listview:ListViewLayoutManager.Enabled="True"
								AllowDrop="False"
								ItemContainerStyle="{StaticResource SettingsListViewItemStyle}"
								ItemsSource="{Binding Path=DataContext.AppSettings, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SettingsAttributeConverter}}">
								<ListView.View>
									<GridView ColumnHeaderContainerStyle="{StaticResource Settings_ListViewHeaderStyle}">
										<GridViewColumn
											listview:RangeColumn.MaxWidth="400"
											DisplayMemberBinding="{Binding Name}"
											Header="Settings Name" />
										<GridViewColumn
											Width="600"
											listview:RangeColumn.IsFillColumn="True"
											listview:RangeColumn.MinWidth="200"
											Header="Value">
											<GridViewColumn.CellTemplate>
												<DataTemplate DataType="{x:Type ListViewItem}">
													<ContentControl Content="{Binding}" Style="{StaticResource SettingsContentControlStyle}" />
												</DataTemplate>
											</GridViewColumn.CellTemplate>
										</GridViewColumn>
									</GridView>
								</ListView.View>
							</ListView>
						</StackPanel>
					</ScrollViewer>
					<StackPanel
						Grid.Row="1"
						Margin="2"
						HorizontalAlignment="Right"
						VerticalAlignment="Center"
						cb:MarginSetter.Margin="2"
						Orientation="Horizontal">
						<Button Command="{Binding SaveSettingsCommand}" Content="Save" />
						<Button Command="{Binding DefaultSettingsCommand}" Content="Default" />
					</StackPanel>
				</Grid>
			</TabItem>
		</TabControl>
		<Grid x:Name="FooterGrid" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="105" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.Resources>
				<Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
					<Setter Property="Margin" Value="4" />
				</Style>
			</Grid.Resources>

			<Border
				Grid.Column="0"
				BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
				BorderThickness="1,1,0,1">
				<TextBlock
					x:Name="FooterOuputTextboxDate"
					Background="{x:Null}"
					Text="{Binding FooterOutputDate}"
					TextAlignment="Center" />
			</Border>
			<Border
				Grid.Column="1"
				BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
				BorderThickness="1">
				<TextBlock
					x:Name="FooterOuputTextboxText"
					Padding="4,0,0,0"
					Background="{x:Null}"
					Foreground="{Binding FooterOutputType, Converter={StaticResource FooterOutputColorConverter}}"
					Text="{Binding FooterOutputText}"
					TextAlignment="Left" />
			</Border>
		</Grid>
		<Grid
			Name="LockScreen"
			Grid.Row="0"
			Grid.RowSpan="3"
			Opacity="0.75"
			Visibility="{Binding LockScreenVisibility, FallbackValue=Collapsed}">
			<Grid.Background>
				<LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Offset="0.29" Color="Gainsboro" />
					<GradientStop Offset="0.967" Color="#FFCBCBCB" />
				</LinearGradientBrush>
			</Grid.Background>
		</Grid>
		<Grid
			Name="ModuleSelection"
			Grid.Row="0"
			Grid.RowSpan="3"
			Visibility="{Binding ModuleSelectionVisibility, FallbackValue=Collapsed}">
			<Grid.Background>
				<LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
					<GradientStop Offset="0.29" Color="Gainsboro" />
					<GradientStop Offset="0.967" Color="#FFCBCBCB" />
				</LinearGradientBrush>
			</Grid.Background>
			<Grid VerticalAlignment="Center">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" MaxHeight="512" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<TextBlock
					Grid.Row="0"
					Padding="20"
					FontSize="24"
					Text="Project Modules"
					TextAlignment="Center" />
				<ListView
					Grid.Row="1"
					MinWidth="256"
					HorizontalAlignment="Center"
					ItemsSource="{Binding Modules}"
					ScrollViewer.VerticalScrollBarVisibility="Auto"
					SelectionChanged="ModuleSelection_SelectionChanged"
					SelectionMode="Single">
					<ListView.ItemContainerStyle>
						<Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
							<Setter Property="HorizontalContentAlignment" Value="Center" />
							<Style.Triggers>
								<Trigger Property="IsKeyboardFocusWithin" Value="True">
									<Setter Property="IsSelected" Value="True" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Vertical">
								<!--  Click="ModuleSelection_ModuleButtonClick" Visibility="{Binding LogoExists, FallbackValue=Collapsed}"  -->
								<Image
									Width="256"
									Height="128"
									MaxWidth="256"
									MaxHeight="256"
									Source="{Binding Logo, FallbackValue='pack://application:,,,/SourceControlGenerator;component/Resources/Logos/Blank.png'}"
									Stretch="Uniform"
									ToolTip="{Binding ModuleName}" />
								<TextBlock
									Text="{Binding DisplayName}"
									TextAlignment="Center"
									Visibility="{Binding DisplayName, Converter={StaticResource EmptyStringVisibilityConverter}, FallbackValue=Collapsed}" />
							</StackPanel>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
				<Grid
					Grid.Row="2"
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<Button
						Click="ModuleSelection_LoadModuleClick"
						Content="Load Module"
						IsEnabled="{Binding CanLoadModule}" />
				</Grid>
			</Grid>
		</Grid>
		<Grid
			Name="LockProgressScreen"
			Grid.Row="0"
			Grid.RowSpan="3"
			Visibility="{Binding ProgressVisiblity, FallbackValue=Collapsed}">
			<Grid.Background>
				<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}" />
			</Grid.Background>
			<Grid.Resources>
				<Storyboard
					x:Key="ProgressVisibleStoryboard"
					Completed="ProgressScreen_Loaded"
					Duration="0:0:0.5" />
			</Grid.Resources>
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding ProgressVisiblity}" Value="Visible">
							<DataTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ProgressVisibleStoryboard}" />
							</DataTrigger.EnterActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition />
				<RowDefinition />
			</Grid.RowDefinitions>
			<StackPanel
				Grid.Row="0"
				VerticalAlignment="Center"
				Orientation="Vertical">
				<TextBlock
					Padding="10"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontSize="36"
					Text="{Binding ProgressTitle, FallbackValue=Processing...}" />
				<TextBlock
					Padding="10"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontSize="20"
					Text="{Binding ProgressMessage, FallbackValue=Running tasks...}" />
			</StackPanel>
			<StackPanel
				Grid.Row="1"
				Margin="50"
				VerticalAlignment="Center"
				Orientation="Vertical">
				<ProgressBar
					x:Name="ProgressScreenBar"
					MinHeight="40"
					HorizontalAlignment="Stretch"
					IsIndeterminate="{Binding IsIndeterminate, FallbackValue=False}"
					Maximum="{Binding ProgressValueMax, FallbackValue=100}"
					Minimum="0"
					Value="{Binding ProgressValue, FallbackValue=75}">
					<i:Interaction.Behaviors>
						<cb:ProgressBarAnimationBehavior />
					</i:Interaction.Behaviors>
				</ProgressBar>
				<Button
					Name="ProgressCancelButton"
					Margin="20"
					HorizontalAlignment="Center"
					Command="{Binding ProgressCancelCommand}"
					Content="Cancel"
					Visibility="{Binding ProgressCancelButtonVisibility, FallbackValue=Collapsed}" />
			</StackPanel>
			<c:AutoScrollingTextbox
				Grid.Row="2"
				Margin="150,20"
				Padding="10,0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				FontSize="12"
				IsReadOnly="True"
				Text="{Binding ProgressLog, FallbackValue='Creating junctions...'}"
				VerticalScrollBarVisibility="Visible" />
		</Grid>
	</Grid>
</windows:ClipboardMonitorWindow>
