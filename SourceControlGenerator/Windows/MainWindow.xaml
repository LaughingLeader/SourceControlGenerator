<Window x:Name="MainAppWindow" x:Class="LL.SCG.Windows.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:LL.SCG"
		xmlns:c="clr-namespace:LL.SCG.Controls"
		xmlns:cv="clr-namespace:LL.SCG.Converters"
		xmlns:fc="clr-namespace:LL.SCG.Commands"
		xmlns:core="clr-namespace:LL.SCG.Core"
		xmlns:vdata="clr-namespace:LL.SCG.Data.View"
		xmlns:proxy="clr-namespace:LL.SCG.Data.Proxy"
		xmlns:theme="clr-namespace:LL.SCG.ThemeSystem"
		xmlns:listview="clr-namespace:Itenso.Windows.Controls.ListViewLayout"
		xmlns:cb="clr-namespace:LL.SCG.Controls.Behavior"
		mc:Ignorable="d"
		Title="Source Control Generator" Height="600" Width="1024" Loaded="MainAppWindow_Loaded" Closing="MainAppWindow_Closing"
		WindowStartupLocation="CenterOwner"
		
		>
	<Window.Resources>
		<CollectionViewSource x:Key="ActiveProjectsViewSource" CollectionViewType="ListCollectionView"/>
		<CollectionViewSource x:Key="ManagedProjectsViewSource" CollectionViewType="ListCollectionView"/>
		<DataTemplate x:Key="AlternatingKeywordsTemplate" DataType="c:TemplateKeywordControl">
			<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
									  KeywordValue="{Binding KeywordValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
		</DataTemplate>
		<c:MenuItemContainerTemplateSelector x:Key="MenuItemContainerTemplateSelector" />

		<HierarchicalDataTemplate DataType="{x:Type vdata:MenuData}" ItemsSource="{Binding MenuItems}" >
			<!--<TextBlock Text="{Binding Header, FallbackValue='Null'}"/>-->
			<MenuItem Header="{Binding Header}" Command="{Binding ClickCommand}" InputGestureText="{Binding ShortcutText}"  UsesItemContainerTemplate="True" ItemContainerTemplateSelector="{StaticResource MenuItemContainerTemplateSelector}" />
		</HierarchicalDataTemplate>
		<DataTemplate DataType="{x:Type vdata:SeparatorData}">
			<Separator />
		</DataTemplate>

		<Style TargetType="TabControl" BasedOn="{StaticResource {x:Type TabControl}}">
			<EventSetter Event="SelectionChanged" Handler="Tab_ResetFocus" />
		</Style>
	</Window.Resources>
	<Grid Width="Auto" Height="Auto">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<DockPanel Grid.Row="0">
			<Menu DockPanel.Dock="Top" ItemsSource="{Binding MenuBarData.Menus}" UsesItemContainerTemplate="True" ItemContainerTemplateSelector="{StaticResource MenuItemContainerTemplateSelector}" MinHeight="10" />
		</DockPanel>
		<TabControl x:Name="MainTabsControl" Grid.Row="1" SelectionChanged="PreventInitialTextboxFocus" BorderThickness="0,1,0,0" Padding="0"
			Visibility="{Binding ModuleIsLoaded, Converter={StaticResource BoolToVisibilityConverter}}" 

			>
			<TabControl.Resources>
				<Style x:Key="MainTabStyle" TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
					<Setter Property="DataContext" Value="{Binding CurrentModuleData}" />
				</Style>
			</TabControl.Resources>
			<TabItem Header="Projects" x:Name="ProjectsTab" >
				<Grid x:Name="ProjectsViewGrid">

				</Grid>
			</TabItem>
			<TabItem Header="Templates" Style="{StaticResource MainTabStyle}">
				<Grid>
					<c:AddTemplateControl x:Name="NewTemplateControl" Grid.ZIndex="1" DataContext="{Binding}" Visibility="{Binding AddTemplateControlVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" TemplateData="{Binding NewTemplateData}" ConfirmCommand="{Binding AddTemplateCommand}" CancelCommand="{Binding CancelTemplateCommand}" />
					<TabControl  Grid.ZIndex="0" TabStripPlacement="Left" Padding="0,5,0,0" >
						<TabControl.Template>
							<ControlTemplate TargetType="TabControl">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<ScrollViewer VerticalScrollBarVisibility="Auto" >
										<TabPanel x:Name="HeaderPanel"
											  Panel.ZIndex ="1" 
											  KeyboardNavigation.TabIndex="1"
											  Grid.Column="0"
											  Grid.Row="0"
											  Margin="2,2,2,0"
											  IsItemsHost="true"/>
									</ScrollViewer>
									<ContentPresenter x:Name="PART_SelectedContentHost"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  Margin="{TemplateBinding Padding}"
										  ContentSource="SelectedContent" Grid.Column="1"/>
								</Grid>
							</ControlTemplate>
						</TabControl.Template>
						<TabControl.Resources>
							<CollectionViewSource x:Key="TemplateTabs" Source="{Binding Templates}"/>
							<DataTemplate DataType="{x:Type vdata:TemplateEditorData}">
								<c:TemplateEditorControl DataContext="{Binding}" TemplateData="{Binding}" />
							</DataTemplate>
							<Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
								<Setter Property="Header" Value="{Binding Path=Name}" />
							</Style>
						</TabControl.Resources>
						<TabControl.ItemsSource>
							<CompositeCollection>
								<CollectionContainer Collection="{Binding Source={StaticResource TemplateTabs}}" />
							</CompositeCollection>
						</TabControl.ItemsSource>
					</TabControl>
				</Grid>
			</TabItem>
			<TabItem x:Name="KeywordsTab" Header="Keywords" Style="{StaticResource MainTabStyle}">
				<TabItem.Resources>
					<Style x:Key="KeywordBorderStyle" TargetType="Border" >
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='border;75'}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;10'}" />
							</Setter.Value>
						</Setter>
					</Style>
					<Style x:Key="KeywordBorderStyleMouseOver" TargetType="Border">
						<!-- <Border BorderThickness="1" Grid.Row="0" BorderBrush="{DynamicResource }" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" >-->
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="BorderBrush">
							<Setter.Value>
								<!--<SolidColorBrush Color="{Binding Source={x:Static theme:ThemeController.TestBrush}, Converter={StaticResource ModifyBrushColorConverter}, ConverterParameter='1.2'}" />!-->
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='border;1'}" />
							</Setter.Value>
						</Setter>
						<Setter Property="Background">
							<Setter.Value>
								<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;10'}" />
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectColorConverter}, ConverterParameter='background;25'}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</TabItem.Resources>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Width="Auto" Height="Auto" x:Name="KeywordsHeaderControls" Margin="5" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Label x:Name="TemplateLabel" Content="Template Keywords" Grid.Column="0" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{x:Static core:TooltipText.TemplateKeywords}" Padding="2,0,50,0">
							<Label.Style>
								<Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Foreground" Value="#FF3A6FFF" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<StackPanel Grid.Column="1" HorizontalAlignment="Right" x:Name="KeywordCommandsGrid" Orientation="Horizontal" >
							<StackPanel.Resources>
								<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
									<Setter Property="Margin" Value="2,0" />
									<Setter Property="Padding" Value="4,2" />
									<Setter Property="MaxHeight" Value="{Binding Path=MaxHeight, ElementName=KeywordFileBrowser}" />
									<Setter Property="MinHeight" Value="{Binding Path=MinHeight, ElementName=KeywordFileBrowser}" />
									<Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, ElementName=KeywordFileBrowser, FallbackValue='#FFABADB3'}" />
								</Style>
							</StackPanel.Resources>
							<c:FileBrowseControl x:Name="KeywordFileBrowser" OpenFileText="Select Keywords File" FileLocationText="{Binding Settings.UserKeywordsFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
												OnOpen="{Binding LoadKeywords}" Width="400" MaxWidth="400" Margin="0,0,2,0" />

							<Button x:Name="SaveKeywordsButton" Content="Save" Click="SaveKeywordsButton_Click" />
							<Button x:Name="SaveAsKeywordsButton" Content="Save As..." Click="SaveAsKeywordsButton_Click" />
							<Button Content="Default..." Click="KeywordsList_Default_Click" ToolTip="Reset Keywords to Default" />
						</StackPanel>
					</Grid>
					<ScrollViewer Grid.Row="1" x:Name="KeywordListScrollViewer" Margin="10,0,10,0" VerticalScrollBarVisibility="Auto" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" >
						<Grid x:Name="KeywordListGrid" Margin="10">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
								<Grid x:Name="DefaultKeywords" >
									<Grid.Resources>
										<Style TargetType="c:TemplateKeywordControl" BasedOn="{StaticResource {x:Type c:TemplateKeywordControl}}">
											<Setter Property="KeywordNameReadOnly" Value="True"/>
											<Setter Property="KeywordValueReadOnly" Value="True"/>
										</Style>
									</Grid.Resources>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="*" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}" >
										<TextBlock Text="Application Keywords (Auto-Assigned)" Margin="2" Padding="2" FontFamily="Neuton" />
									</Border>
									<ItemsControl Grid.Row="1" x:Name="AppKeywordsList" ItemsSource="{Binding KeyList}" >
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="c:TemplateKeywordControl">
												<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName}" KeywordValue="{Binding KeywordValue}" KeywordNameReadOnly="True" KeywordValueReadOnly="True" />
											</DataTemplate>
										</ItemsControl.ItemTemplate>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Vertical" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
									<Border Grid.Row="2" Style="{StaticResource KeywordBorderStyleMouseOver}" >
										<Expander x:Name="DateKeywordsExpander"  Header="Date Keywords" Style="{DynamicResource ExpanderRightButton}" Background="{x:Null}" FontFamily="Neuton" >
											<ScrollViewer FlowDirection="LeftToRight" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" MaxHeight="125">
												<ItemsControl DataContext="{Binding Controller.Data, ElementName=MainAppWindow}" ItemsSource="{Binding DateKeyList}" >
													<ItemsControl.ItemTemplate>
														<DataTemplate DataType="c:TemplateKeywordControl">
															<c:TemplateKeywordControl DataContext="{Binding}" KeywordName="{Binding KeywordName}" KeywordValue="{Binding KeywordValue}" KeywordNameReadOnly="True" KeywordValueReadOnly="True" />
														</DataTemplate>
													</ItemsControl.ItemTemplate>
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Vertical" />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
												</ItemsControl>
											</ScrollViewer>
										</Expander>
									</Border>
								</Grid>
							</ScrollViewer>
							<Grid x:Name="ParentGrid_UserKeywords" Grid.Row="1" >
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0" Style="{StaticResource KeywordBorderStyle}" >
									<TextBlock Text="User Keywords" Background="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" Margin="2" Padding="2" FontFamily="Neuton" />
								</Border>
								<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
									<StackPanel Orientation="Vertical" DataContext="{Binding UserKeywords}">
										<c:TemplateKeywordControl KeywordName="$DateCustom" KeywordValue="{Binding DateCustom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeywordNameReadOnly="True" KeywordValueReadOnly="False" FontFamily="Neuton"  />
										<ItemsControl x:Name="UserKeywords" ItemsSource="{Binding Keywords}" ItemTemplate="{StaticResource AlternatingKeywordsTemplate}" AlternationCount="2" >
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Vertical" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>
								</ScrollViewer>
							</Grid>
						</Grid>
					</ScrollViewer>
					<Grid Grid.Row="2" x:Name="KeywordsFooterControls">
						<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
							<StackPanel.Resources>
								<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
									<Setter Property="Width" Value="55" />
								</Style>
							</StackPanel.Resources>
							<Button Content="Add" Click="KeywordsList_Add_Click" ToolTip="Add New Keyword"/>
							<Button Content="Remove" Click="KeywordsList_Remove_Click" ToolTip="Remove Last Keyword" />
						</StackPanel>
					</Grid>
				</Grid>

			</TabItem>
			<TabItem x:Name="Tab_Settings" Header="Settings" BorderThickness="0" Style="{StaticResource MainTabStyle}">
				<TabItem.Resources>
					<Style x:Key="SettingsListViewItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Style.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="{x:Null}" />
								<Setter Property="BorderBrush" Value="{x:Null}" />
							</Trigger>
						</Style.Triggers>
					</Style>
					<Style x:Key="Settings_ListViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
						<Setter Property="Visibility" Value="Collapsed" />
					</Style>
					<Style x:Key="SettingsContentControlStyle" TargetType="ContentControl" >
						<Setter Property="HorizontalAlignment" Value="Stretch" />
						
						<Style.Triggers>
							<DataTrigger Binding="{Binding Converter={StaticResource SettingsAttributeValueControlConverter}}" Value="{x:Type c:FileBrowseControl}">
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<c:FileBrowseControl OpenFileText="{Binding OpenFileText}" BrowseType="{Binding BrowseType, Mode=TwoWay}" FileLocationText="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
																							OnOpen="{Binding OnOpened}"
																											 />
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding Converter={StaticResource SettingsAttributeValueControlConverter}}" Value="{x:Type TextBox}">
								<Setter Property="ContentTemplate">
									<Setter.Value>
										<DataTemplate>
											<TextBox Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</DataTrigger>
						</Style.Triggers>
					</Style>
					<Style x:Key="SettingsHeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
						<Setter Property="Margin" Value="10" />
						<Setter Property="FontSize" Value="16" />
						<Setter Property="FontFamily" Value="Arial" />
					</Style>
				</TabItem.Resources>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<ScrollViewer VerticalScrollBarVisibility="Auto">
						<StackPanel Orientation="Vertical">
							<TextBlock Text="{Binding ModuleName, FallbackValue='Module', StringFormat='\{0\} Settings'}" Style="{StaticResource SettingsHeaderStyle}" />
							<Separator/>
							<ListView x:Name="ModuleSettingsListView" Padding="10,0,10,0" ItemsSource="{Binding ModuleSettings, Converter={StaticResource SettingsAttributeConverter}, UpdateSourceTrigger=PropertyChanged}" AllowDrop="False"
									 listview:ListViewLayoutManager.Enabled="True"
									 ItemContainerStyle="{StaticResource SettingsListViewItemStyle}"
								>
								<ListView.View>
									<GridView ColumnHeaderContainerStyle="{StaticResource Settings_ListViewHeaderStyle}">
										<GridViewColumn Header="Settings Name" DisplayMemberBinding="{Binding Name}" listview:RangeColumn.MaxWidth="400" />
										<GridViewColumn Header="Value" Width="600" listview:RangeColumn.IsFillColumn="True" listview:RangeColumn.MinWidth="200" >
											<GridViewColumn.CellTemplate>
												<DataTemplate DataType="{x:Type ListViewItem}">
													<!-- Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=ActualWidth}"-->
													<ContentControl Content="{Binding}" Style="{StaticResource SettingsContentControlStyle}" />
												</DataTemplate>
											</GridViewColumn.CellTemplate>
										</GridViewColumn>
									</GridView>
								</ListView.View>
							</ListView>
							<Separator/>
							<TextBlock Text="Source Control Generator Settings" Style="{StaticResource SettingsHeaderStyle}" />
							<Separator/>
							<ListView x:Name="MainSettingsListView" Padding="10,0,10,0" ItemsSource="{Binding Path=DataContext.AppSettings, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SettingsAttributeConverter}}" AllowDrop="False"
									 listview:ListViewLayoutManager.Enabled="True"
									 ItemContainerStyle="{StaticResource SettingsListViewItemStyle}"
								>
								<ListView.View>
									<GridView ColumnHeaderContainerStyle="{StaticResource Settings_ListViewHeaderStyle}">
										<GridViewColumn Header="Settings Name" DisplayMemberBinding="{Binding Name}" listview:RangeColumn.MaxWidth="400" />
										<GridViewColumn Header="Value" Width="600" listview:RangeColumn.IsFillColumn="True" listview:RangeColumn.MinWidth="200" >
											<GridViewColumn.CellTemplate>
												<DataTemplate DataType="{x:Type ListViewItem}">
													<ContentControl Content="{Binding}" Style="{StaticResource SettingsContentControlStyle}" />
												</DataTemplate>
											</GridViewColumn.CellTemplate>
										</GridViewColumn>
									</GridView>
								</ListView.View>
							</ListView>
						</StackPanel>
					</ScrollViewer>
					<StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2" cb:MarginSetter.Margin="2">
						<Button Content="Save" Command="{Binding SaveSettingsCommand}" />
						<Button Content="Default" Command="{Binding DefaultSettingsCommand}" />
					</StackPanel>
				</Grid>
			</TabItem>
		</TabControl>
		<Grid x:Name="FooterGrid" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="105" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Border Grid.Column="0" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
			<Border Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />

			<TextBox Grid.Column="0" x:Name="FooterOuputTextboxDate" Text="{Binding Path=FooterOutputDate, ElementName=MainAppWindow}" IsReadOnly="True" Margin="0" BorderThickness="0" TextAlignment="Center" Background="{x:Null}" />
			<TextBox Grid.Column="1" x:Name="FooterOuputTextboxText" Text="{Binding Path=FooterOutputText, ElementName=MainAppWindow}" IsReadOnly="True" TextAlignment="Left" Foreground="{Binding Path=FooterOutputType, ElementName=MainAppWindow, Converter={StaticResource FooterOutputColorConverter}}" Margin="0" BorderThickness="0" Background="{x:Null}" Padding="4,0,0,0" />
		</Grid>
		<Grid Name="LockScreen" Grid.Row="0" Grid.RowSpan="3" Visibility="{Binding LockScreenVisibility, FallbackValue=Collapsed}" Opacity="0.75">
			<Grid.Background>
				<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
					<GradientStop Color="Gainsboro" Offset="0.29"/>
					<GradientStop Color="#FFCBCBCB" Offset="0.967"/>
				</LinearGradientBrush>
			</Grid.Background>
		</Grid>
		<Grid Name="ModuleSelection" Grid.Row="0" Grid.RowSpan="3" Visibility="{Binding ModuleSelectionVisibility, FallbackValue=Collapsed}">
			<Grid.Background>
				<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
					<GradientStop Color="Gainsboro" Offset="0.29"/>
					<GradientStop Color="#FFCBCBCB" Offset="0.967"/>
				</LinearGradientBrush>
			</Grid.Background>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition Height="Auto" />
					<RowDefinition MaxHeight="256" Height="128"/>
					<RowDefinition Height="Auto" />
					<RowDefinition />
				</Grid.RowDefinitions>
				<TextBlock Text="Project Modules" FontSize="24" TextAlignment="Center" Padding="20" Grid.Row="1"/>
				<ListView ItemsSource="{Binding Modules}" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="ModuleSelection_SelectionChanged" SelectionMode="Single" Grid.Row="2"
						  HorizontalAlignment="Center" MinWidth="256"
						  >
					<ListView.ItemContainerStyle>
						<Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
							<Setter Property="HorizontalContentAlignment" Value="Center" />
							<Style.Triggers>
								<Trigger Property="IsKeyboardFocusWithin" Value="True">
									<Setter Property="IsSelected" Value="True"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Vertical">
								<!-- Click="ModuleSelection_ModuleButtonClick"-->
								<Image MaxWidth="256" MaxHeight="256" Stretch="Uniform" Source="{Binding Logo, TargetNullValue={x:Null}}" Visibility="{Binding LogoExists, FallbackValue=Collapsed}" ToolTip="{Binding ModuleName}" />
								<TextBlock Text="{Binding DisplayName}" TextAlignment="Center" Visibility="{Binding DisplayName, Converter={StaticResource EmptyStringVisibilityConverter}, FallbackValue=Collapsed}" />
							</StackPanel>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
				<Grid Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center">
					<Button Content="Load Module" IsEnabled="{Binding CanLoadModule}" Click="ModuleSelection_LoadModuleClick" />
				</Grid>
			</Grid>
		</Grid>
		<Grid Name="LockProgressScreen" Grid.Row="0" Grid.RowSpan="3" Visibility="{Binding ProgressVisiblity, FallbackValue=Visible}">
			<Grid.Background>
				<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
			</Grid.Background>
			<Grid.Resources>
				<Storyboard x:Key="ProgressVisibleStoryboard" Duration="0:0:0.5" Completed="ProgressScreen_Loaded" />
			</Grid.Resources>
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding ProgressVisiblity}" Value="Visible">
							<DataTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ProgressVisibleStoryboard}" />
							</DataTrigger.EnterActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition />
				<RowDefinition />
			</Grid.RowDefinitions>
			<StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment="Center">
				<TextBlock Text="{Binding ProgressTitle, FallbackValue=Processing...}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="36" Padding="10" />
				<TextBlock Text="{Binding ProgressMessage, FallbackValue=Running tasks...}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Padding="10" />
			</StackPanel>
			<ProgressBar Grid.Row="1" Minimum="0" Maximum="{Binding ProgressValueMax, FallbackValue=100}" Value="{Binding ProgressValue, FallbackValue=75}" Margin="50" HorizontalAlignment="Stretch" VerticalAlignment="Center" MinHeight="40" />
			<c:AutoScrollingTextbox Grid.Row="2" Text="{Binding ProgressLog, FallbackValue='TestTestTestTestTestTestTestTestTestTestTestTestTestTestTest'}" HorizontalAlignment="Center" Padding="2,0" VerticalAlignment="Top" TextAlignment="Center" FontSize="12" IsReadOnly="True" VerticalScrollBarVisibility="Visible" Height="100" MinWidth="500" />
		</Grid>
	</Grid>
</Window>
