<local:HideWindowBase
	x:Class="SCG.Windows.TextGenerator"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:SCG.Controls"
	xmlns:cb="clr-namespace:SCG.Controls.Behavior"
	xmlns:convert="clr-namespace:SCG.Converters"
	xmlns:core="clr-namespace:SCG.Core"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:listview="clr-namespace:Itenso.Windows.Controls.ListViewLayout"
	xmlns:local="clr-namespace:SCG.Windows"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:scg="clr-namespace:SCG"
	xmlns:vdata="clr-namespace:SCG.Data.View"
	Title="Text Generator"
	Width="800"
	Height="900"
	mc:Ignorable="d">
	<local:HideWindowBase.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/SourceControlGenerator;component/ThemeSystem/ResourceDictionary/NumericUpDownTheme.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</local:HideWindowBase.Resources>
	<Grid Margin="10">
		<Grid.Resources>
			<local:TextGeneratorInputTemplateSelector x:Key="KeywordInputTemplateSelector" />
			<DataTemplate x:Key="InputNumericUpDown" DataType="{x:Type vdata:TextGeneratorInputNumberData}">
				<StackPanel Orientation="Horizontal">
					<Label Width="Auto" Content="Start:" />
					<c:NumericUpDown
						MinWidth="33"
						Maximum="999999"
						Minimum="-999999"
						Value="{Binding StartValue, Mode=TwoWay}" />
					<Label Width="Auto" Content="Increment By:" />
					<c:NumericUpDown
						MinWidth="33"
						Maximum="999999"
						Minimum="-999999"
						Value="{Binding IncrementBy, Mode=TwoWay}" />
					<Label Width="Auto" Content="Padding:" />
					<c:NumericUpDown
						MinWidth="33"
						Maximum="999"
						Minimum="0"
						ToolTip="Pad the output with this many zeroes."
						Value="{Binding NumberPadding, Mode=TwoWay}" />
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="InputTextBox" DataType="{x:Type vdata:TextGeneratorInputTextData}">
				<TextBox HorizontalAlignment="Stretch" Text="{Binding InputValue}" />
			</DataTemplate>
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" MaxHeight="300" />
			<RowDefinition Height="*" />
			<RowDefinition Height="0.05*" />
		</Grid.RowDefinitions>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<StackPanel
				Grid.Column="0"
				HorizontalAlignment="Left"
				cb:MarginSetter.Margin="2,0,2,0"
				Orientation="Horizontal">
				<ComboBox
					x:Name="PresetComboBox"
					MinWidth="100"
					DisplayMemberPath="Name"
					IsEditable="True"
					IsTextSearchEnabled="False"
					ItemsSource="{Binding GeneratorPresets}"
					KeyDown="PresetComboBox_KeyDown"
					SelectedIndex="{Binding ActivePresetIndex}" />
				<Button
					x:Name="AddSettingsButton"
					Command="{Binding AddSettingsCommand}"
					Content="+" />
				<Button
					x:Name="RemoveSettingsButton"
					Command="{Binding RemoveSettingsCommand}"
					Content="-" />
				<Button
					x:Name="SaveSettingsButton"
					Command="{Binding SaveSettingsCommand}"
					Content="Save" />
			</StackPanel>
			<StackPanel
				Grid.Column="1"
				HorizontalAlignment="Center"
				cb:MarginSetter.Margin="2,0,2,0"
				Orientation="Horizontal">
				<Button
					x:Name="AddKeywordButton"
					Command="{Binding AddCommand}"
					Content="Add Keyword" />
				<ComboBox
					x:Name="KeywordAddTypeDropdown"
					ItemsSource="{Binding Source={scg:EnumBindingSource {x:Type vdata:TextGeneratorInputType}}}"
					SelectedValue="{Binding ActiveData.NextKeywordType, Mode=TwoWay}">
					<ComboBox.ToolTip>
						<TextBlock
							MaxWidth="200"
							Text="{Binding ActiveData.NextKeywordType, Converter={StaticResource EnumDescriptionConverter}, FallbackValue={x:Null}}"
							TextWrapping="Wrap"
							Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource EmptyStringVisibilityConverter}}" />
					</ComboBox.ToolTip>
				</ComboBox>
			</StackPanel>
			<StackPanel
				Grid.Column="2"
				HorizontalAlignment="Right"
				cb:MarginSetter.Margin="2,0,2,0"
				Orientation="Horizontal">
				<TextBlock VerticalAlignment="Center" Text="Text Generation Amount: " />
				<c:NumericUpDown
					x:Name="TextGenerationAmountControl"
					MinWidth="50"
					Maximum="999999"
					Minimum="1"
					Value="{Binding ActiveData.GenerationAmount, Mode=TwoWay}" />
				<Button
					x:Name="GenerateButton"
					Command="{Binding GenerateCommand}"
					Content="Generate Text" />
			</StackPanel>
		</Grid>
		<ListView
			Grid.Row="1"
			Margin="0,10,0,10"
			listview:ListViewLayoutManager.Enabled="True"
			AllowDrop="False"
			DataContext="{Binding ActiveData}"
			ItemsSource="{Binding Keywords}"
			ScrollViewer.VerticalScrollBarVisibility="Auto">
			<ListView.Resources>
				<Style TargetType="ListViewItem">
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				</Style>
			</ListView.Resources>
			<ListView.View>
				<GridView>
					<GridViewColumn listview:RangeColumn.MinWidth="200" Header="Keyword">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBox HorizontalAlignment="Stretch" Text="{Binding Path=Keyword}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn
						listview:RangeColumn.IsFillColumn="True"
						listview:RangeColumn.MinWidth="100"
						Header="Value">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource KeywordInputTemplateSelector}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn listview:RangeColumn.MinWidth="125" Header="Type">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding InputType}">
									<TextBlock.ToolTip>
										<TextBlock
											MaxWidth="200"
											Text="{Binding InputType, Converter={StaticResource EnumDescriptionConverter}, FallbackValue={x:Null}}"
											TextWrapping="Wrap"
											Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource EmptyStringVisibilityConverter}}" />
									</TextBlock.ToolTip>
								</TextBlock>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn listview:RangeColumn.MinWidth="25" Header="">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<c:CrossButton
									MaxWidth="15"
									MaxHeight="15"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType=Window}, Mode=Default}"
									CommandParameter="{Binding}"
									ToolTip="{Binding Source={x:Static core:TooltipText.TextGeneratorRemoveKeywordButton}}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</ListView.View>
		</ListView>
		<Grid Grid.Row="2" DataContext="{Binding ActiveData}">
			<Grid.RowDefinitions>
				<RowDefinition Height="2.5*" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="1*" />
			</Grid.RowDefinitions>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Margin="0,0,20,0"
						VerticalAlignment="Center"
						Text="Input Text:"
						ToolTip="{Binding Source={x:Static core:TooltipText.TextGeneratorInputText}}" />
					<Grid
						x:Name="InputControlsGrid"
						Grid.Column="1"
						HorizontalAlignment="Right"
						DataContext="{Binding InputData}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<c:FileBrowseControl
							x:Name="InputFileBrowser"
							Width="550"
							FileLocationText="{Binding FilePath}"
							OnOpen="{Binding OpenCommand}"
							OpenFileText="{Binding OpenText}" />
						<StackPanel
							Grid.Column="1"
							HorizontalAlignment="Right"
							Orientation="Horizontal">
							<StackPanel.Resources>
								<Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
								</Style>
							</StackPanel.Resources>
							<Button
								x:Name="SaveButton"
								Height="{Binding Path=Height, ElementName=InputFileBrowser, FallbackValue=22}"
								Margin="4,2,0,2"
								BorderBrush="#FFABADB3"
								BorderThickness="1"
								Command="{Binding SaveCommand}"
								CommandParameter="{Binding}"
								Content="Save" />
							<Button
								x:Name="SaveAsButton"
								Height="{Binding Path=Height, ElementName=InputFileBrowser, FallbackValue=20}"
								Margin="4,0,1,0"
								BorderBrush="#FFABADB3"
								BorderThickness="1"
								Command="{Binding SaveAsCommand}"
								CommandParameter="{Binding}"
								Content="Save As..." />
						</StackPanel>
					</Grid>
				</Grid>
				<TextBox
					x:Name="InputTextBox"
					Grid.Row="1"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					AcceptsReturn="True"
					AcceptsTab="True"
					AllowDrop="True"
					Text="{Binding InputText, Mode=TwoWay}"
					ToolTip="{Binding Source={x:Static core:TooltipText.TextGeneratorRemoveKeywordButton}}"
					VerticalScrollBarVisibility="Auto" />
			</Grid>
			<GridSplitter
				Grid.Row="1"
				Height="4"
				HorizontalAlignment="Stretch"
				Foreground="{x:Null}" />
			<Grid Grid.Row="2" DataContext="{Binding DataContext.ActiveData, RelativeSource={RelativeSource AncestorType=Window}}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Grid x:Name="OutputGridControls" DataContext="{Binding OutputData}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Margin="0,0,20,0"
						VerticalAlignment="Center"
						Text="Output Text:"
						ToolTip="" />
					<Grid Grid.Column="1" HorizontalAlignment="Right">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<c:FileBrowseControl
							x:Name="OutputFileBrowser"
							Width="550"
							FileLocationText="{Binding FilePath}"
							OnOpen="{Binding OpenCommand}"
							OpenFileText="{Binding OpenText}" />
						<StackPanel
							Grid.Column="1"
							HorizontalAlignment="Right"
							Orientation="Horizontal">
							<StackPanel.Resources>
								<Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
									<Setter Property="Margin" Value="1,0" />
									<Setter Property="Padding" Value="4,2" />
								</Style>
							</StackPanel.Resources>
							<Button
								Height="{Binding Path=Height, ElementName=OutputFileBrowser, FallbackValue=22}"
								Margin="4,2,0,2"
								BorderBrush="#FFABADB3"
								BorderThickness="1"
								Command="{Binding SaveCommand}"
								CommandParameter="{Binding}"
								Content="Save" />
							<Button
								Height="{Binding Path=Height, ElementName=OutputFileBrowser, FallbackValue=20}"
								Margin="4,0,1,0"
								BorderBrush="#FFABADB3"
								BorderThickness="1"
								Command="{Binding SaveAsCommand}"
								CommandParameter="{Binding}"
								Content="Save As..." />
						</StackPanel>
					</Grid>
				</Grid>
				<TextBox
					x:Name="OutputTextBox"
					Grid.Row="1"
					AcceptsReturn="True"
					AcceptsTab="True"
					AllowDrop="True"
					Text="{Binding OutputText, Mode=TwoWay}"
					VerticalScrollBarVisibility="Auto" />
			</Grid>
		</Grid>
		<TextBlock
			Grid.Row="3"
			Margin="2,10"
			HorizontalAlignment="Center"
			Text="{Binding FooterText}" />
		<Border
			Grid.Row="3"
			BorderBrush="Gray"
			BorderThickness="1" />
	</Grid>
</local:HideWindowBase>
