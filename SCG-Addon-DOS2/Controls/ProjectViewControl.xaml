<UserControl x:Class="LL.SCG.DOS2.Controls.ProjectViewControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:LL.SCG.DOS2.Controls"
			 xmlns:core="clr-namespace:LL.SCG.DOS2.Core"
			 xmlns:c="clr-namespace:LL.SCG.Controls;assembly=SourceControlGenerator"
			 xmlns:cb="clr-namespace:LL.SCG.Controls.Behavior;assembly=SourceControlGenerator"
			 xmlns:cv="clr-namespace:LL.SCG.Converters;assembly=SourceControlGenerator"
			 mc:Ignorable="d" 
			 d:DesignHeight="500" d:DesignWidth="900">
	<UserControl.Resources>
		<cv:EmptyListVisibilityConverter x:Key="EmptyListVisibilityConverter"/>
		<cv:NewlineStringConverter x:Key="NewlineStringConverter"/>
	</UserControl.Resources>
	<Grid x:Name="Projects_ParentGrid" Width="Auto" Height="Auto">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" Name="ManagedProjectsRow" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid x:Name="AvailableProjectsView" Grid.Column="1" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" Name="AvailableProjectsRow" />
			</Grid.ColumnDefinitions>
			<StackPanel x:Name="SideWindowButtons" Grid.Column="0" Orientation="Vertical" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" >
				<StackPanel.Resources>
					<Style TargetType="Button">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="-90" />
							</Setter.Value>
						</Setter>
					</Style>
				</StackPanel.Resources>
				<Button x:Name="Btn_AvailableProjects" Content="Available" ToolTip="{Binding AvailableProjectsToggleText}" Click="Btn_AvailableProjects_Click" HorizontalAlignment="Right" BorderThickness="1,0.5,0,1" />
			</StackPanel>
			<ScrollViewer Grid.Column="1" Padding="10,0,10,0" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" >
				<Grid x:Name="NewProjects" >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Label Content="Available Projects" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Margin="0" ToolTip="{Binding Source={x:Static core:DOS2Tooltips.AvailableProjects}, Converter={StaticResource NewlineStringConverter}}" />
					<Grid Grid.Row="1"  MaxHeight="300" Width="200" MaxWidth="200">
						<Grid>
							<ListBox x:Name="AvailableProjectsList" ItemsSource="{Binding NewProjects}" HorizontalContentAlignment="Left" SelectionMode="Extended" SelectionChanged="AvailableProjectsList_SelectionChanged" MouseRightButtonUp="AvailableProjectsList_MouseRightButtonUp"
									 ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" cb:ListBoxSelectionBehavior.ClickSelection="True"
									 >
								<ListBox.ItemContainerStyle>
									<Style TargetType="ListBoxItem">
										<Setter Property="Padding" Value="5" />
										<Setter Property="HorizontalAlignment" Value="Stretch"/>
									</Style>
								</ListBox.ItemContainerStyle>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Name}" ToolTip="{Binding Tooltip}" ToolTipService.InitialShowDelay="0" ToolTipService.BetweenShowDelay="0"/>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
							<TextBlock Text="No New Mod Projects Found" Visibility="{Binding NewProjects, Converter={StaticResource EmptyListVisibilityConverter}}" FontStyle="Italic" Foreground="#FF4D4D4D" Margin="5,5,0,5" Padding="0,0,10,0" HorizontalAlignment="Center" />
						</Grid>
					</Grid>
					<Grid Grid.Row="2" Margin="0,5,0,0">
						<Button x:Name="AddSelectedProjectsButton" Click="AddSelectedProjectsButton_Click" Content="{Binding ManageButtonsText}" HorizontalAlignment="Center" Padding="10,5" FontFamily="Roboto" MinWidth="129" MinHeight="20" />
					</Grid>
				</Grid>
			</ScrollViewer>
		</Grid>
		<Grid x:Name="ManagedProjectsBorder" Grid.Column="0" >
			<Grid x:Name="ManagedProjectsGrid" Margin="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*" MinHeight="100"/>
					<RowDefinition Height="5" Name="ProjectsGridSplit"/>
					<RowDefinition Height="*" MinHeight="30"/>
				</Grid.RowDefinitions>
				<Grid Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Label Content="Managed Projects" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" />
				</Grid>
				<Border Grid.Row="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
					<ScrollViewer x:Name="ProjectsDataGridScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
						<DataGrid x:Name="ManagedProjectsDataGrid" ItemsSource="{Binding ManagedProjects}" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="ManagedProjectsDataGrid_SelectionChanged" BorderBrush="{x:Null}" BorderThickness="0"  
								  CanUserAddRows="False" EnableRowVirtualization="False" Loaded="ManagedProjectsDataGrid_Loaded" ColumnWidth="Auto"
								  >
							<DataGrid.Resources>
								<Style x:Key="ColumnElementStyle" TargetType="TextBlock">
									<Setter Property="Margin" Value="5,0,10,0" />
								</Style>
								<c:BindingProxy x:Key="Proxy" Data="{Binding}" />
								<Style x:Key="ProjectsHeaderStyle" TargetType="DataGridColumnHeader">
									<Setter Property="HorizontalContentAlignment" Value="Center" />
								</Style>
							</DataGrid.Resources>
							<DataGrid.Columns>
								<DataGridTemplateColumn MinWidth="25" CanUserResize="False"  HeaderStyle="{StaticResource ProjectsHeaderStyle}"  >
									<DataGridTemplateColumn.Header>
										<CheckBox Checked="ManagedProjects_SelectAll" Unchecked="ManagedProjects_SelectNone" ToolTip="Select/Deselect All" />
									</DataGridTemplateColumn.Header>
									<DataGridTemplateColumn.CellStyle>
										<Style TargetType="{x:Type DataGridCell}">
											<Setter Property="Margin" Value="0" />
										</Style>
									</DataGridTemplateColumn.CellStyle>
								<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<CheckBox IsChecked="{Binding Selected}" HorizontalAlignment="Center" VerticalAlignment="Center" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn MinWidth="60"  HeaderStyle="{StaticResource ProjectsHeaderStyle}" CanUserResize="False" CanUserSort="False" >
									<DataGridTemplateColumn.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="Shortcuts" ToolTipService.ToolTip="Project Shortcuts" />
										</DataTemplate>
									</DataGridTemplateColumn.HeaderTemplate>
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
												<StackPanel.Resources>
													<Style TargetType="Button">
														<Setter Property="MinHeight" Value="16" />
														<Setter Property="MinWidth" Value="16" />
														<Setter Property="MaxHeight" Value="16" />
														<Setter Property="MaxWidth" Value="16" />
													</Style>
												</StackPanel.Resources>
												<Button x:Name="Btn_Backup" ToolTip="Open Backup Folder..." Command="{Binding OpenBackupFolder}" >
													<Image Source="/SourceControlGenerator;component/Resources/Icons/7zipIcon.png" Stretch="UniformToFill"/>
												</Button>
												<Button x:Name="Btn_GenGit" IsEnabled="{Binding GitGenerated}" >
													<Image Stretch="UniformToFill" ToolTipService.ShowOnDisabled="True">
														<Image.Style>
															<Style TargetType="Image">
																<Style.Triggers>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Source" Value="/SourceControlGenerator;component/Resources/Icons/GitLogo_Disabled.png" />
																		<Setter Property="ToolTip" Value="Git Repo Not Detected" />
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="True">
																		<Setter Property="Source" Value="/SourceControlGenerator;component/Resources/Icons/GitLogo.png" />
																		<Setter Property="ToolTip" Value="Open Git Repo..." />
																	</Trigger>
																</Style.Triggers>
															</Style>
														</Image.Style>
													</Image>
												</Button>
												<Button x:Name="Btn_DataFolders" ToolTip="Open Data Folder..." ContextMenuService.PlacementTarget="{Binding RelativeSource={RelativeSource Self}}" Click="SetDataFolderContextMenuTarget" >
													<Image Source="/SourceControlGenerator;component/Resources/Icons/Folder.png" Stretch="UniformToFill"/>
													<Button.ContextMenu>
														<ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
															<MenuItem x:Name="Btn_EditorFolder" Header="Open Editor Folder..." Command="{Binding OpenEditorFolder}" />
															<MenuItem x:Name="Btn_ModsFolder" Header="Open Mods Folder..." Command="{Binding OpenModsFolder}" />
															<MenuItem x:Name="Btn_ProjectFolder" Header="Open Project Folder..." Command="{Binding OpenProjectFolder}" />
															<MenuItem x:Name="Btn_PublicFolder" Header="Open Public Folder..." Command="{Binding OpenPublicFolder}" />
														</ContextMenu>
													</Button.ContextMenu>
													<Button.Style>
														<Style TargetType="{x:Type Button}">
															<Style.Triggers>
																<EventTrigger RoutedEvent="Click">
																	<EventTrigger.Actions>
																		<BeginStoryboard>
																			<Storyboard>
																				<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
																					<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
																				</BooleanAnimationUsingKeyFrames>
																			</Storyboard>
																		</BeginStoryboard>
																	</EventTrigger.Actions>
																</EventTrigger>
															</Style.Triggers>
															<Setter Property="ContextMenu">
																<Setter.Value>
																	<ContextMenu>
																		<MenuItem />
																		<MenuItem />
																	</ContextMenu>
																</Setter.Value>
															</Setter>
														</Style>
													</Button.Style>
												</Button>
											</StackPanel>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn Header="Name" Binding="{Binding ModuleInfo.Name}" ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="50" Width="Auto" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell">
											<Setter Property="ToolTip" Value="{Binding FolderName}" />
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Author" Binding="{Binding ModuleInfo.Author}" ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="50" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Version" Binding="{Binding Version}" ElementStyle="{StaticResource ColumnElementStyle}"  MinWidth="50" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Type" Binding="{Binding ModuleInfo.Type}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="40" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
								<DataGridTextColumn Header="Description" x:Name="DescriptionColumn" Binding="{Binding ModuleInfo.Description}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="70" HeaderStyle="{StaticResource ProjectsHeaderStyle}">
									<DataGridTextColumn.CellStyle>
										<Style TargetType="DataGridCell">
											<Setter Property="ToolTip" Value="{Binding ModuleInfo.Description}" />
										</Style>
									</DataGridTextColumn.CellStyle>
								</DataGridTextColumn>
								<DataGridTextColumn Header="Last Backup" Binding="{Binding LastBackupText}"  ElementStyle="{StaticResource ColumnElementStyle}" MinWidth="80" HeaderStyle="{StaticResource ProjectsHeaderStyle}" />
							</DataGrid.Columns>
							<DataGrid.CellStyle>
								<!--Override Highlighting so that its easy to see what is selected even when the control is not focused-->
								<Style TargetType="{x:Type DataGridCell}">
									<Style.Triggers>
										<Trigger  Property="IsSelected" Value="true">
											<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
											<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
											<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
										</Trigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
												<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsKeyboardFocusWithin}" Value="False" />
											</MultiDataTrigger.Conditions>
											<MultiDataTrigger.Setters>
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
												<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
												<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
											</MultiDataTrigger.Setters>
										</MultiDataTrigger>
									</Style.Triggers>
								</Style>
							</DataGrid.CellStyle>
						</DataGrid>
					</ScrollViewer>
				</Border>
				<GridSplitter x:Name="ProjectsDataGridSplitter" Grid.Row="2" Height="2" HorizontalAlignment="Stretch" Foreground="{x:Null}" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
				<Grid x:Name="ProjectActions" Grid.Row="3" MaxHeight="30" VerticalAlignment="Top" Margin="0,5,0,0">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
						<StackPanel.Resources>
							<Style TargetType="Button">
								<Setter Property="Margin" Value="2,0" />
								<Setter Property="Padding" Value="4,2,4,2" />
								<Setter Property="IsEnabled" Value="{Binding ProjectSelected}" />
							</Style>
						</StackPanel.Resources>
						<Button x:Name="BackupButton" Content="Backup Selected" Click="BackupButton_Click" />
						<Button x:Name="BackupSeletedButton" Content="Backup Selected To..." Click="BackupSelectedButton_Click" />
						<Button x:Name="GitGenerationButton" Content="Create Git Repos for Selected..." Click="GitGenerationButton_Click" />
					</StackPanel>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
